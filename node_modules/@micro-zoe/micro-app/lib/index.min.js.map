{"version":3,"file":"index.min.js","sources":["../src/libs/utils.ts","../src/constants.ts","../src/source/fetch.ts","../src/source/loader/html.ts","../src/source/scoped_css.ts","../src/source/load_event.ts","../src/source/links.ts","../src/source/patch.ts","../src/source/scripts.ts","../src/app_manager.ts","../src/libs/additional.ts","../src/libs/global_env.ts","../src/source/index.ts","../src/interact/index.ts","../src/interact/event_center.ts","../src/sandbox/bind_function.ts","../src/sandbox/effect.ts","../src/sandbox/index.ts","../src/interact/lifecycles_event.ts","../src/create_app.ts","../src/micro_app_element.ts","../src/prefetch.ts","../src/micro_app.ts"],"sourcesContent":["/* eslint-disable no-new-func, indent, @typescript-eslint/explicit-module-boundary-types */\nimport type { Func } from '@micro-app/types'\n\nexport const version = '__MICRO_APP_VERSION__'\n\n// do not use isUndefined\nexport const isBrowser = typeof window !== 'undefined'\n\n// do not use isUndefined\nexport const globalThis = (typeof global !== 'undefined')\n  ? global\n  : (\n    (typeof window !== 'undefined')\n      ? window\n      : (\n        (typeof self !== 'undefined') ? self : Function('return this')()\n      )\n  )\n\n// is Undefined\nexport function isUndefined (target: unknown): target is undefined {\n  return target === undefined\n}\n\n// is Null\nexport function isNull (target: unknown): target is null {\n  return target === null\n}\n\n// is String\nexport function isString (target: unknown): target is string {\n  return typeof target === 'string'\n}\n\n// is Boolean\nexport function isBoolean (target: unknown): target is boolean {\n  return typeof target === 'boolean'\n}\n\n// is function\nexport function isFunction (target: unknown): boolean {\n  return typeof target === 'function'\n}\n\n// is Array\nexport const isArray = Array.isArray\n\n// is PlainObject\nexport function isPlainObject (target: unknown): boolean {\n  return toString.call(target) === '[object Object]'\n}\n\n// is Promise\nexport function isPromise (target: unknown): boolean {\n  return toString.call(target) === '[object Promise]'\n}\n\n// is bind function\nexport function isBoundFunction (target: any): boolean {\n  return isFunction(target) && target.name.indexOf('bound ') === 0 && !target.hasOwnProperty('prototype')\n}\n\n// is ShadowRoot\nexport function isShadowRoot (target: unknown): boolean {\n  return typeof ShadowRoot !== 'undefined' && target instanceof ShadowRoot\n}\n\nexport const rawDefineProperty = Object.defineProperty\n\nexport const rawDefineProperties = Object.defineProperties\nexport const rawHasOwnProperty = Object.prototype.hasOwnProperty\n\n/**\n * format error log\n * @param msg message\n * @param appName app name, default is null\n */\nexport function logError (\n  msg: unknown,\n  appName: string | null = null,\n  ...rest: any[]\n): void {\n  const appNameTip = appName && isString(appName) ? ` app ${appName}:` : ''\n  if (isString(msg)) {\n    console.error(`[micro-app]${appNameTip} ${msg}`, ...rest)\n  } else {\n    console.error(`[micro-app]${appNameTip}`, msg, ...rest)\n  }\n}\n\n/**\n * format warn log\n * @param msg message\n * @param appName app name, default is null\n */\nexport function logWarn (\n  msg: unknown,\n  appName: string | null = null,\n  ...rest: any[]\n): void {\n  const appNameTip = appName && isString(appName) ? ` app ${appName}:` : ''\n  if (isString(msg)) {\n    console.warn(`[micro-app]${appNameTip} ${msg}`, ...rest)\n  } else {\n    console.warn(`[micro-app]${appNameTip}`, msg, ...rest)\n  }\n}\n\n/**\n * async execution\n * @param fn callback\n * @param args params\n */\nexport function defer (fn: Func, ...args: any[]): void {\n  Promise.resolve().then(fn.bind(null, ...args))\n}\n\n/**\n * Add address protocol\n * @param url address\n */\nexport function addProtocol (url: string): string {\n  return url.startsWith('//') ? `${location.protocol}${url}` : url\n}\n\n/**\n * format URL address\n * note the scenes:\n * 1. micro-app -> attributeChangedCallback\n * 2. preFetch\n */\nexport function formatAppURL (url: string | null, appName: string | null = null): string {\n  if (!isString(url) || !url) return ''\n\n  try {\n    const { origin, pathname, search } = new URL(addProtocol(url))\n    // If it ends with .html/.node/.php/.net/.etc, don’t need to add /\n    if (/\\.(\\w+)$/.test(pathname)) {\n      return `${origin}${pathname}${search}`\n    }\n    const fullPath = `${origin}${pathname}/`.replace(/\\/\\/$/, '/')\n    return /^https?:\\/\\//.test(fullPath) ? `${fullPath}${search}` : ''\n  } catch (e) {\n    logError(e, appName)\n    return ''\n  }\n}\n\n/**\n * format name\n * note the scenes:\n * 1. micro-app -> attributeChangedCallback\n * 2. event_center -> EventCenterForMicroApp -> constructor\n * 3. event_center -> EventCenterForBaseApp -> all methods\n * 4. preFetch\n * 5. plugins\n */\nexport function formatAppName (name: string | null): string {\n  if (!isString(name) || !name) return ''\n  return name.replace(/(^\\d+)|([^\\w\\d-_])/gi, '')\n}\n\n/**\n * Get valid address, such as https://xxx/xx/xx.html to https://xxx/xx/\n * @param url app.url\n */\nexport function getEffectivePath (url: string): string {\n  const { origin, pathname } = new URL(url)\n  if (/\\.(\\w+)$/.test(pathname)) {\n    const fullPath = `${origin}${pathname}`\n    const pathArr = fullPath.split('/')\n    pathArr.pop()\n    return pathArr.join('/') + '/'\n  }\n\n  return `${origin}${pathname}/`.replace(/\\/\\/$/, '/')\n}\n\n/**\n * Complete address\n * @param path address\n * @param baseURI base url(app.url)\n */\nexport function CompletionPath (path: string, baseURI: string): string {\n  if (\n    !path ||\n    /^((((ht|f)tps?)|file):)?\\/\\//.test(path) ||\n    /^(data|blob):/.test(path)\n  ) return path\n\n  return new URL(path, getEffectivePath(addProtocol(baseURI))).toString()\n}\n\n/**\n * Get the folder where the link resource is located,\n * which is used to complete the relative address in the css\n * @param linkPath full link address\n */\nexport function getLinkFileDir (linkPath: string): string {\n  const pathArr = linkPath.split('/')\n  pathArr.pop()\n  return addProtocol(pathArr.join('/') + '/')\n}\n\n/**\n * promise stream\n * @param promiseList promise list\n * @param successCb success callback\n * @param errorCb failed callback\n * @param finallyCb finally callback\n */\nexport function promiseStream <T> (\n  promiseList: Array<Promise<T> | T>,\n  successCb: CallableFunction,\n  errorCb: CallableFunction,\n  finallyCb?: CallableFunction,\n): void {\n  let finishedNum = 0\n\n  function isFinished () {\n    if (++finishedNum === promiseList.length && finallyCb) finallyCb()\n  }\n\n  promiseList.forEach((p, i) => {\n    if (isPromise(p)) {\n      (p as Promise<T>).then((res: T) => {\n        successCb({\n          data: res,\n          index: i,\n        })\n        isFinished()\n      }).catch((err: Error) => {\n        errorCb({\n          error: err,\n          index: i,\n        })\n        isFinished()\n      })\n    } else {\n      successCb({\n        data: p,\n        index: i,\n      })\n      isFinished()\n    }\n  })\n}\n\n// Check whether the browser supports module script\nexport function isSupportModuleScript (): boolean {\n  const s = document.createElement('script')\n  return 'noModule' in s\n}\n\n// Create a random symbol string\nexport function createNonceSrc (): string {\n  return 'inline-' + Math.random().toString(36).substr(2, 15)\n}\n\n// Array deduplication\nexport function unique (array: any[]): any[] {\n  return array.filter(function (this: Record<PropertyKey, boolean>, item) {\n    return item in this ? false : (this[item] = true)\n  }, Object.create(null))\n}\n\n// requestIdleCallback polyfill\nexport const requestIdleCallback = globalThis.requestIdleCallback ||\n  function (fn: CallableFunction) {\n    const lastTime = Date.now()\n    return setTimeout(function () {\n      fn({\n        didTimeout: false,\n        timeRemaining () {\n          return Math.max(0, 50 - (Date.now() - lastTime))\n        },\n      })\n    }, 50)\n  }\n\n/**\n * Record the currently running app.name\n */\nlet currentMicroAppName: string | null = null\nexport function setCurrentAppName (appName: string | null): void {\n  currentMicroAppName = appName\n}\n\nexport function throttleDeferForSetAppName (appName: string) {\n  if (currentMicroAppName !== appName) {\n    setCurrentAppName(appName)\n    defer(() => {\n      setCurrentAppName(null)\n    })\n  }\n}\n\n// get the currently running app.name\nexport function getCurrentAppName (): string | null {\n  return currentMicroAppName\n}\n\n// Clear appName\nexport function removeDomScope (): void {\n  setCurrentAppName(null)\n}\n\n// is safari browser\nexport function isSafari (): boolean {\n  return /Safari/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent)\n}\n\n/**\n * Create pure elements\n */\nexport function pureCreateElement<K extends keyof HTMLElementTagNameMap> (tagName: K, options?: ElementCreationOptions): HTMLElementTagNameMap[K] {\n  const element = document.createElement(tagName, options)\n  if (element.__MICRO_APP_NAME__) delete element.__MICRO_APP_NAME__\n  return element\n}\n\n/**\n * clone origin elements to target\n * @param origin Cloned element\n * @param target Accept cloned elements\n * @param deep deep clone or transfer dom\n */\nexport function cloneContainer <T extends Element, Q extends Element> (\n  origin: T,\n  target: Q,\n  deep: boolean,\n): void {\n  target.innerHTML = ''\n  if (deep) {\n    const clonedNode = origin.cloneNode(true)\n    const fragment = document.createDocumentFragment()\n    Array.from(clonedNode.childNodes).forEach((node: Node | Element) => {\n      fragment.appendChild(node)\n    })\n    target.appendChild(fragment)\n  } else {\n    Array.from(origin.childNodes).forEach((node: Node | Element) => {\n      target.appendChild(node)\n    })\n  }\n}\n\n// is invalid key of querySelector\nexport function isInvalidQuerySelectorKey (key: string): boolean {\n  if (__TEST__) return !key || /(^\\d)|([^\\w\\d-_$])/gi.test(key)\n  return !key || /(^\\d)|([^\\w\\d-_\\u4e00-\\u9fa5])/gi.test(key)\n}\n\n// unique element\nexport function isUniqueElement (key: string): boolean {\n  return (\n    /^body$/i.test(key) ||\n    /^head$/i.test(key) ||\n    /^html$/i.test(key)\n  )\n}\n\n/**\n * get micro-app element\n * @param target app container\n */\nexport function getRootContainer (target: HTMLElement | ShadowRoot): HTMLElement {\n  return (isShadowRoot(target) ? (target as ShadowRoot).host : target) as HTMLElement\n}\n\n/**\n * trim start & end\n */\nexport function trim (str: string): string {\n  return str ? str.replace(/^\\s+|\\s+$/g, '') : ''\n}\n\nexport function isFireFox (): boolean {\n  return navigator.userAgent.indexOf('Firefox') > -1\n}\n","export enum ObservedAttrName {\n  NAME = 'name',\n  URL = 'url',\n}\n\n// app status\nexport enum appStates {\n  NOT_LOADED = 'NOT_LOADED',\n  LOADING_SOURCE_CODE = 'LOADING_SOURCE_CODE',\n  LOAD_SOURCE_FINISHED = 'LOAD_SOURCE_FINISHED',\n  LOAD_SOURCE_ERROR = 'LOAD_SOURCE_ERROR',\n  MOUNTING = 'MOUNTING',\n  MOUNTED = 'MOUNTED',\n  UNMOUNT = 'UNMOUNT',\n}\n\n// lifecycles\nexport enum lifeCycles {\n  CREATED = 'created',\n  BEFOREMOUNT = 'beforemount',\n  MOUNTED = 'mounted',\n  UNMOUNT = 'unmount',\n  ERROR = 'error',\n  // 👇 keep-alive only\n  BEFORESHOW = 'beforeshow',\n  AFTERSHOW = 'aftershow',\n  AFTERHIDDEN = 'afterhidden',\n}\n\n// keep-alive status\nexport enum keepAliveStates {\n  KEEP_ALIVE_SHOW = 'KEEP_ALIVE_SHOW',\n  KEEP_ALIVE_HIDDEN = 'KEEP_ALIVE_HIDDEN',\n}\n\nexport const globalKeyToBeCached = 'window,self,globalThis,Array,Object,String,Boolean,Math,Number,Symbol,Date,Promise,Function,Proxy,WeakMap,WeakSet,Set,Map,Reflect,Element,Node,Document,RegExp,Error,TypeError,JSON,isNaN,parseFloat,parseInt,performance,console,decodeURI,encodeURI,decodeURIComponent,encodeURIComponent,location,navigator,undefined'\n","import { isFunction } from '../libs/utils'\nimport microApp from '../micro_app'\n\n/**\n * fetch source of html, js, css\n * @param url source path\n * @param appName app name\n * @param config config of fetch\n */\nexport function fetchSource (url: string, appName: string | null = null, options = {}): Promise<string> {\n  if (isFunction(microApp.fetch)) {\n    return microApp.fetch!(url, options, appName)\n  }\n  return fetch(url, options).then((res) => {\n    return res.text()\n  })\n}\n","import { AppInterface, plugins } from '@micro-app/types'\nimport { fetchSource } from '../fetch'\nimport { isFunction, isPlainObject, logError } from '../../libs/utils'\nimport microApp from '../../micro_app'\n\nexport interface IHTMLLoader {\n  run (app: AppInterface, successCb: CallableFunction): void\n}\n\nexport class HTMLLoader implements IHTMLLoader {\n  private static instance: HTMLLoader;\n  public static getInstance (): HTMLLoader {\n    if (!this.instance) {\n      this.instance = new HTMLLoader()\n    }\n    return this.instance\n  }\n\n  /**\n   * run logic of load and format html\n   * @param successCb success callback\n   * @param errorCb error callback, type: (err: Error, meetFetchErr: boolean) => void\n   */\n  public run (app: AppInterface, successCb: CallableFunction): void {\n    const appName = app.name\n    const htmlUrl = app.ssrUrl || app.url\n    fetchSource(htmlUrl, appName, { cache: 'no-cache' }).then((htmlStr: string) => {\n      if (!htmlStr) {\n        const msg = 'html is empty, please check in detail'\n        app.onerror(new Error(msg))\n        return logError(msg, appName)\n      }\n\n      htmlStr = this.formatHTML(htmlUrl, htmlStr, appName)\n\n      successCb(htmlStr, app)\n    }).catch((e) => {\n      logError(`Failed to fetch data from ${app.url}, micro-app stop rendering`, appName, e)\n      app.onLoadError(e)\n    })\n  }\n\n  private formatHTML (htmlUrl: string, htmlStr: string, appName: string) {\n    return this.processHtml(htmlUrl, htmlStr, appName, microApp.plugins)\n      .replace(/<head[^>]*>[\\s\\S]*?<\\/head>/i, (match) => {\n        return match\n          .replace(/<head/i, '<micro-app-head')\n          .replace(/<\\/head>/i, '</micro-app-head>')\n      })\n      .replace(/<body[^>]*>[\\s\\S]*?<\\/body>/i, (match) => {\n        return match\n          .replace(/<body/i, '<micro-app-body')\n          .replace(/<\\/body>/i, '</micro-app-body>')\n      })\n  }\n\n  private processHtml (url: string, code: string, appName: string, plugins: plugins | undefined): string {\n    if (!plugins) return code\n\n    const mergedPlugins: NonNullable<plugins['global']> = []\n    plugins.global && mergedPlugins.push(...plugins.global)\n    plugins.modules?.[appName] && mergedPlugins.push(...plugins.modules[appName])\n\n    if (mergedPlugins.length > 0) {\n      return mergedPlugins.reduce((preCode, plugin) => {\n        if (isPlainObject(plugin) && isFunction(plugin.processHtml)) {\n          return plugin.processHtml!(preCode, url, plugin.options)\n        }\n        return preCode\n      }, code)\n    }\n    return code\n  }\n}\n","/* eslint-disable no-useless-escape, no-cond-assign */\nimport type { AppInterface } from '@micro-app/types'\nimport { CompletionPath, getLinkFileDir, logError, trim, isFireFox } from '../libs/utils'\nimport microApp from '../micro_app'\n\n// common reg\nconst rootSelectorREG = /(^|\\s+)(html|:root)(?=[\\s>~[.#:]+|$)/\nconst bodySelectorREG = /(^|\\s+)((html[\\s>~]+body)|body)(?=[\\s>~[.#:]+|$)/\n\ntype parseErrorType = Error & { reason: string, filename?: string }\nfunction parseError (msg: string, linkPath?: string): void {\n  msg = linkPath ? `${linkPath} ${msg}` : msg\n  const err = new Error(msg) as parseErrorType\n  err.reason = msg\n  if (linkPath) {\n    err.filename = linkPath\n  }\n\n  throw err\n}\n\n/**\n * Reference https://github.com/reworkcss/css\n * CSSParser mainly deals with 3 scenes: styleRule, @, and comment\n * And scopecss deals with 2 scenes: selector & url\n * And can also disable scopecss with inline comments\n */\nclass CSSParser {\n  private cssText = '' // css content\n  private prefix = '' // prefix as micro-app[name=xxx]\n  private baseURI = '' // domain name\n  private linkPath = '' // link resource address, if it is the style converted from link, it will have linkPath\n  private result = '' // parsed cssText\n  private scopecssDisable = false // use block comments /* scopecss-disable */ to disable scopecss in your file, and use /* scopecss-enable */ to enable scopecss\n  private scopecssDisableSelectors: Array<string> = [] // disable or enable scopecss for specific selectors\n  private scopecssDisableNextLine = false // use block comments /* scopecss-disable-next-line */ to disable scopecss on a specific line\n\n  public exec (\n    cssText: string,\n    prefix: string,\n    baseURI: string,\n    linkPath?: string,\n  ): string {\n    this.cssText = cssText\n    this.prefix = prefix\n    this.baseURI = baseURI\n    this.linkPath = linkPath || ''\n    this.matchRules()\n    return isFireFox() ? decodeURIComponent(this.result) : this.result\n  }\n\n  public reset (): void {\n    this.cssText = this.prefix = this.baseURI = this.linkPath = this.result = ''\n    this.scopecssDisable = this.scopecssDisableNextLine = false\n    this.scopecssDisableSelectors = []\n  }\n\n  // core action for match rules\n  private matchRules (): void {\n    this.matchLeadingSpaces()\n    this.matchComments()\n    while (\n      this.cssText.length &&\n      this.cssText.charAt(0) !== '}' &&\n      (this.matchAtRule() || this.matchStyleRule())\n    ) {\n      this.matchComments()\n    }\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleRule\n  private matchStyleRule (): boolean | void {\n    const selectors = this.formatSelector(true)\n\n    // reset scopecssDisableNextLine\n    this.scopecssDisableNextLine = false\n\n    if (!selectors) return parseError('selector missing', this.linkPath)\n\n    this.recordResult(selectors)\n\n    this.matchComments()\n\n    this.styleDeclarations()\n\n    this.matchLeadingSpaces()\n\n    return true\n  }\n\n  private formatSelector (skip: boolean): false | string {\n    const m = this.commonMatch(/^([^{]+)/, skip)\n    if (!m) return false\n\n    return m[0].replace(/(^|,[\\n\\s]*)([^,]+)/g, (_, separator, selector) => {\n      selector = trim(selector)\n      if (!(\n        this.scopecssDisableNextLine ||\n        (\n          this.scopecssDisable && (\n            !this.scopecssDisableSelectors.length ||\n            this.scopecssDisableSelectors.includes(selector)\n          )\n        ) ||\n        rootSelectorREG.test(selector)\n      )) {\n        if (bodySelectorREG.test(selector)) {\n          selector = selector.replace(bodySelectorREG, this.prefix + ' micro-app-body')\n        } else {\n          selector = this.prefix + ' ' + selector\n        }\n      }\n\n      return separator + selector\n    })\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration\n  private styleDeclarations (): boolean | void {\n    if (!this.matchOpenBrace()) return parseError(\"Declaration missing '{'\", this.linkPath)\n\n    this.matchAllDeclarations()\n\n    if (!this.matchCloseBrace()) return parseError(\"Declaration missing '}'\", this.linkPath)\n\n    return true\n  }\n\n  private matchAllDeclarations (): void {\n    let cssValue = (this.commonMatch(/^(?:url\\([\"']?(?:[^)\"'}]+)[\"']?\\)|[^}/])*/, true) as RegExpExecArray)[0]\n\n    if (cssValue) {\n      if (\n        !this.scopecssDisableNextLine &&\n        (!this.scopecssDisable || this.scopecssDisableSelectors.length)\n      ) {\n        cssValue = cssValue.replace(/url\\([\"']?([^)\"']+)[\"']?\\)/gm, (all, $1) => {\n          if (/^((data|blob):|#)/.test($1) || /^(https?:)?\\/\\//.test($1)) {\n            return all\n          }\n\n          // ./a/b.png  ../a/b.png  a/b.png\n          if (/^((\\.\\.?\\/)|[^/])/.test($1) && this.linkPath) {\n            this.baseURI = getLinkFileDir(this.linkPath)\n          }\n\n          return `url(\"${CompletionPath($1, this.baseURI)}\")`\n        })\n      }\n\n      this.recordResult(cssValue)\n    }\n\n    // reset scopecssDisableNextLine\n    this.scopecssDisableNextLine = false\n\n    if (!this.cssText || this.cssText.charAt(0) === '}') return\n\n    // extract comments in declarations\n    if (this.cssText.charAt(0) === '/' && this.cssText.charAt(1) === '*') {\n      this.matchComments()\n    } else {\n      this.commonMatch(/\\/+/)\n    }\n\n    return this.matchAllDeclarations()\n  }\n\n  private matchAtRule (): boolean | void {\n    if (this.cssText[0] !== '@') return false\n    // reset scopecssDisableNextLine\n    this.scopecssDisableNextLine = false\n\n    return this.keyframesRule() ||\n      this.mediaRule() ||\n      this.customMediaRule() ||\n      this.supportsRule() ||\n      this.importRule() ||\n      this.charsetRule() ||\n      this.namespaceRule() ||\n      this.documentRule() ||\n      this.pageRule() ||\n      this.hostRule() ||\n      this.fontFaceRule()\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/CSSKeyframesRule\n  private keyframesRule (): boolean | void {\n    if (!this.commonMatch(/^@([-\\w]+)?keyframes\\s*/)) return false\n\n    if (!this.commonMatch(/^([-\\w]+)\\s*/)) return parseError('@keyframes missing name', this.linkPath)\n\n    this.matchComments()\n\n    if (!this.matchOpenBrace()) return parseError(\"@keyframes missing '{'\", this.linkPath)\n\n    this.matchComments()\n    while (this.keyframeRule()) {\n      this.matchComments()\n    }\n\n    if (!this.matchCloseBrace()) return parseError(\"@keyframes missing '}'\", this.linkPath)\n\n    this.matchLeadingSpaces()\n\n    return true\n  }\n\n  private keyframeRule (): boolean {\n    let r; const valList = []\n\n    while (r = this.commonMatch(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/)) {\n      valList.push(r[1])\n      this.commonMatch(/^,\\s*/)\n    }\n\n    if (!valList.length) return false\n\n    this.styleDeclarations()\n\n    this.matchLeadingSpaces()\n\n    return true\n  }\n\n  // https://github.com/postcss/postcss-custom-media\n  private customMediaRule (): boolean {\n    if (!this.commonMatch(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/)) return false\n\n    this.matchLeadingSpaces()\n\n    return true\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/CSSPageRule\n  private pageRule (): boolean | void {\n    if (!this.commonMatch(/^@page */)) return false\n\n    this.formatSelector(false)\n\n    // reset scopecssDisableNextLine\n    this.scopecssDisableNextLine = false\n\n    return this.commonHandlerForAtRuleWithSelfRule('page')\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/CSSFontFaceRule\n  private fontFaceRule (): boolean | void {\n    if (!this.commonMatch(/^@font-face\\s*/)) return false\n\n    return this.commonHandlerForAtRuleWithSelfRule('font-face')\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/CSSMediaRule\n  private mediaRule = this.createMatcherForAtRuleWithChildRule(/^@media *([^{]+)/, 'media')\n  // https://developer.mozilla.org/en-US/docs/Web/API/CSSSupportsRule\n  private supportsRule = this.createMatcherForAtRuleWithChildRule(/^@supports *([^{]+)/, 'supports')\n  private documentRule = this.createMatcherForAtRuleWithChildRule(/^@([-\\w]+)?document *([^{]+)/, 'document')\n  private hostRule = this.createMatcherForAtRuleWithChildRule(/^@host\\s*/, 'host')\n  // https://developer.mozilla.org/en-US/docs/Web/API/CSSImportRule\n  private importRule = this.createMatcherForNoneBraceAtRule('import')\n  // Removed in most browsers\n  private charsetRule = this.createMatcherForNoneBraceAtRule('charset')\n  // https://developer.mozilla.org/en-US/docs/Web/API/CSSNamespaceRule\n  private namespaceRule = this.createMatcherForNoneBraceAtRule('namespace')\n\n  // common matcher for @media, @supports, @document, @host\n  private createMatcherForAtRuleWithChildRule (reg: RegExp, name: string): () => boolean | void {\n    return () => {\n      if (!this.commonMatch(reg)) return false\n\n      if (!this.matchOpenBrace()) return parseError(`@${name} missing '{'`, this.linkPath)\n\n      this.matchComments()\n\n      this.matchRules()\n\n      if (!this.matchCloseBrace()) return parseError(`@${name} missing '}'`, this.linkPath)\n\n      this.matchLeadingSpaces()\n\n      return true\n    }\n  }\n\n  // common matcher for @import, @charset, @namespace\n  private createMatcherForNoneBraceAtRule (name: string): () => boolean {\n    const reg = new RegExp('^@' + name + '\\\\s*([^;]+);')\n    return () => {\n      if (!this.commonMatch(reg)) return false\n      this.matchLeadingSpaces()\n      return true\n    }\n  }\n\n  // common handler for @font-face, @page\n  private commonHandlerForAtRuleWithSelfRule (name: string): boolean | void {\n    if (!this.matchOpenBrace()) return parseError(`@${name} missing '{'`, this.linkPath)\n\n    this.matchAllDeclarations()\n\n    if (!this.matchCloseBrace()) return parseError(`@${name} missing '}'`, this.linkPath)\n\n    this.matchLeadingSpaces()\n\n    return true\n  }\n\n  // match and slice comments\n  private matchComments (): void {\n    while (this.matchComment());\n  }\n\n  // css comment\n  private matchComment (): boolean | void {\n    if (this.cssText.charAt(0) !== '/' || this.cssText.charAt(1) !== '*') return false\n    // reset scopecssDisableNextLine\n    this.scopecssDisableNextLine = false\n\n    let i = 2\n    while (this.cssText.charAt(i) !== '' && (this.cssText.charAt(i) !== '*' || this.cssText.charAt(i + 1) !== '/')) ++i\n    i += 2\n\n    if (this.cssText.charAt(i - 1) === '') {\n      return parseError('End of comment missing', this.linkPath)\n    }\n\n    // get comment content\n    let commentText = this.cssText.slice(2, i - 2)\n\n    this.recordResult(`/*${commentText}*/`)\n\n    commentText = trim(commentText.replace(/^\\s*!/, ''))\n\n    // set ignore config\n    if (commentText === 'scopecss-disable-next-line') {\n      this.scopecssDisableNextLine = true\n    } else if (/^scopecss-disable/.test(commentText)) {\n      if (commentText === 'scopecss-disable') {\n        this.scopecssDisable = true\n      } else {\n        this.scopecssDisable = true\n        const ignoreRules = commentText.replace('scopecss-disable', '').split(',')\n        ignoreRules.forEach((rule: string) => {\n          this.scopecssDisableSelectors.push(trim(rule))\n        })\n      }\n    } else if (commentText === 'scopecss-enable') {\n      this.scopecssDisable = false\n      this.scopecssDisableSelectors = []\n    }\n\n    this.cssText = this.cssText.slice(i)\n\n    this.matchLeadingSpaces()\n\n    return true\n  }\n\n  private commonMatch (reg: RegExp, skip = false): RegExpExecArray | null | void {\n    const matchArray = reg.exec(this.cssText)\n    if (!matchArray) return\n    const matchStr = matchArray[0]\n    this.cssText = this.cssText.slice(matchStr.length)\n    if (!skip) this.recordResult(matchStr)\n    return matchArray\n  }\n\n  private matchOpenBrace () {\n    return this.commonMatch(/^{\\s*/)\n  }\n\n  private matchCloseBrace () {\n    return this.commonMatch(/^}/)\n  }\n\n  // match and slice the leading spaces\n  private matchLeadingSpaces (): void {\n    this.commonMatch(/^\\s*/)\n  }\n\n  // splice string\n  private recordResult (strFragment: string): void {\n    // Firefox is slow when string contain special characters, see https://github.com/micro-zoe/micro-app/issues/256\n    if (isFireFox()) {\n      this.result += encodeURIComponent(strFragment)\n    } else {\n      this.result += strFragment\n    }\n  }\n}\n\n/**\n * common method of bind CSS\n */\nfunction commonAction (\n  styleElement: HTMLStyleElement,\n  appName: string,\n  prefix: string,\n  baseURI: string,\n  linkPath?: string,\n) {\n  if (!styleElement.__MICRO_APP_HAS_SCOPED__) {\n    styleElement.__MICRO_APP_HAS_SCOPED__ = true\n    let result: string | null = null\n    try {\n      result = parser.exec(\n        styleElement.textContent!,\n        prefix,\n        baseURI,\n        linkPath,\n      )\n      parser.reset()\n    } catch (e) {\n      parser.reset()\n      logError('An error occurred while parsing CSS:\\n', appName, e)\n    }\n\n    if (result) styleElement.textContent = result\n  }\n}\n\nlet parser: CSSParser\n/**\n * scopedCSS\n * @param styleElement target style element\n * @param appName app name\n */\nexport default function scopedCSS (\n  styleElement: HTMLStyleElement,\n  app: AppInterface,\n): HTMLStyleElement {\n  if (app.scopecss) {\n    const prefix = `${microApp.tagName}[name=${app.name}]`\n\n    if (!parser) parser = new CSSParser()\n\n    if (styleElement.textContent) {\n      commonAction(\n        styleElement,\n        app.name,\n        prefix,\n        app.url,\n        styleElement.__MICRO_APP_LINK_PATH__,\n      )\n    } else {\n      const observer = new MutationObserver(function () {\n        observer.disconnect()\n        // styled-component will be ignore\n        if (styleElement.textContent && !styleElement.hasAttribute('data-styled')) {\n          commonAction(\n            styleElement,\n            app.name,\n            prefix,\n            app.url,\n            styleElement.__MICRO_APP_LINK_PATH__,\n          )\n        }\n      })\n\n      observer.observe(styleElement, { childList: true })\n    }\n  }\n\n  return styleElement\n}\n","import { isFunction } from '../libs/utils'\n\nfunction eventHandler (event: Event, element: HTMLLinkElement | HTMLScriptElement): void {\n  Object.defineProperties(event, {\n    currentTarget: {\n      get () {\n        return element\n      }\n    },\n    srcElement: {\n      get () {\n        return element\n      }\n    },\n    target: {\n      get () {\n        return element\n      }\n    },\n  })\n}\n\nexport function dispatchOnLoadEvent (element: HTMLLinkElement | HTMLScriptElement): void {\n  const event = new CustomEvent('load')\n  eventHandler(event, element)\n  if (isFunction(element.onload)) {\n    element.onload!(event)\n  } else {\n    element.dispatchEvent(event)\n  }\n}\n\nexport function dispatchOnErrorEvent (element: HTMLLinkElement | HTMLScriptElement): void {\n  const event = new CustomEvent('error')\n  eventHandler(event, element)\n  if (isFunction(element.onerror)) {\n    element.onerror!(event)\n  } else {\n    element.dispatchEvent(event)\n  }\n}\n","import type {\n  AppInterface,\n  sourceLinkInfo,\n} from '@micro-app/types'\nimport { fetchSource } from './fetch'\nimport {\n  CompletionPath,\n  promiseStream,\n  pureCreateElement,\n  defer,\n  logError,\n} from '../libs/utils'\nimport scopedCSS from './scoped_css'\nimport {\n  dispatchOnLoadEvent,\n  dispatchOnErrorEvent,\n} from './load_event'\n\n// Global links, reuse across apps\nexport const globalLinks = new Map<string, string>()\n\n/**\n * Extract link elements\n * @param link link element\n * @param parent parent element of link\n * @param app app\n * @param microAppHead micro-app-head element\n * @param isDynamic dynamic insert\n */\nexport function extractLinkFromHtml (\n  link: HTMLLinkElement,\n  parent: Node,\n  app: AppInterface,\n  isDynamic = false,\n): any {\n  const rel = link.getAttribute('rel')\n  let href = link.getAttribute('href')\n  let replaceComment: Comment | null = null\n  if (rel === 'stylesheet' && href) {\n    href = CompletionPath(href, app.url)\n    if (!isDynamic) {\n      replaceComment = document.createComment(`link element with href=${href} move to micro-app-head as style element`)\n      app.source.links.set(href, {\n        code: '',\n        placeholder: replaceComment,\n        isGlobal: link.hasAttribute('global'),\n      })\n    } else {\n      return {\n        url: href,\n        info: {\n          code: '',\n          isGlobal: link.hasAttribute('global'),\n        }\n      }\n    }\n  } else if (rel && ['prefetch', 'preload', 'prerender', 'icon', 'apple-touch-icon'].includes(rel)) {\n    // preload prefetch icon ....\n    if (isDynamic) {\n      replaceComment = document.createComment(`link element with rel=${rel}${href ? ' & href=' + href : ''} removed by micro-app`)\n    } else {\n      parent.removeChild(link)\n    }\n  } else if (href) {\n    // dns-prefetch preconnect modulepreload search ....\n    link.setAttribute('href', CompletionPath(href, app.url))\n  }\n\n  if (isDynamic) {\n    return { replaceComment }\n  } else if (replaceComment) {\n    return parent.replaceChild(replaceComment, link)\n  }\n}\n\n/**\n * Get link remote resources\n * @param wrapElement htmlDom\n * @param app app\n * @param microAppHead micro-app-head\n */\nexport function fetchLinksFromHtml (\n  wrapElement: HTMLElement,\n  app: AppInterface,\n  microAppHead: Element,\n): void {\n  const linkEntries: Array<[string, sourceLinkInfo]> = Array.from(app.source.links.entries())\n\n  const fetchLinkPromise: Array<Promise<string>|string> = linkEntries.map(([url]) => {\n    return globalLinks.has(url) ? globalLinks.get(url)! : fetchSource(url, app.name)\n  })\n\n  promiseStream<string>(fetchLinkPromise, (res: {data: string, index: number}) => {\n    fetchLinkSuccess(\n      linkEntries[res.index][0],\n      linkEntries[res.index][1],\n      res.data,\n      microAppHead,\n      app,\n    )\n  }, (err: {error: Error, index: number}) => {\n    logError(err, app.name)\n  }, () => {\n    app.onLoad(wrapElement)\n  })\n}\n\n/**\n * fetch link succeeded, replace placeholder with style tag\n * @param url resource address\n * @param info resource link info\n * @param data code\n * @param microAppHead micro-app-head\n * @param app app\n */\nexport function fetchLinkSuccess (\n  url: string,\n  info: sourceLinkInfo,\n  data: string,\n  microAppHead: Element,\n  app: AppInterface,\n): void {\n  if (info.isGlobal && !globalLinks.has(url)) {\n    globalLinks.set(url, data)\n  }\n\n  const styleLink = pureCreateElement('style')\n  styleLink.textContent = data\n  styleLink.__MICRO_APP_LINK_PATH__ = url\n  styleLink.setAttribute('data-origin-href', url)\n\n  if (info.placeholder!.parentNode) {\n    info.placeholder!.parentNode.replaceChild(scopedCSS(styleLink, app), info.placeholder!)\n  } else {\n    microAppHead.appendChild(scopedCSS(styleLink, app))\n  }\n\n  info.placeholder = null\n  info.code = data\n}\n\n/**\n * get css from dynamic link\n * @param url link address\n * @param info info\n * @param app app\n * @param originLink origin link element\n * @param replaceStyle style element which replaced origin link\n */\nexport function formatDynamicLink (\n  url: string,\n  info: sourceLinkInfo,\n  app: AppInterface,\n  originLink: HTMLLinkElement,\n  replaceStyle: HTMLStyleElement,\n): void {\n  if (app.source.links.has(url)) {\n    replaceStyle.textContent = app.source.links.get(url)!.code\n    scopedCSS(replaceStyle, app)\n    defer(() => dispatchOnLoadEvent(originLink))\n    return\n  }\n\n  if (globalLinks.has(url)) {\n    const code = globalLinks.get(url)!\n    info.code = code\n    app.source.links.set(url, info)\n    replaceStyle.textContent = code\n    scopedCSS(replaceStyle, app)\n    defer(() => dispatchOnLoadEvent(originLink))\n    return\n  }\n\n  fetchSource(url, app.name).then((data: string) => {\n    info.code = data\n    app.source.links.set(url, info)\n    info.isGlobal && globalLinks.set(url, data)\n    replaceStyle.textContent = data\n    scopedCSS(replaceStyle, app)\n    dispatchOnLoadEvent(originLink)\n  }).catch((err) => {\n    logError(err, app.name)\n    dispatchOnErrorEvent(originLink)\n  })\n}\n","import type { Func, AppInterface } from '@micro-app/types'\nimport { appInstanceMap } from '../create_app'\nimport {\n  CompletionPath,\n  getCurrentAppName,\n  pureCreateElement,\n  setCurrentAppName,\n  logWarn,\n  isPlainObject,\n  isString,\n  isInvalidQuerySelectorKey,\n  isUniqueElement,\n  isFunction,\n} from '../libs/utils'\nimport scopedCSS from './scoped_css'\nimport { extractLinkFromHtml, formatDynamicLink } from './links'\nimport { extractScriptElement, runScript, runDynamicRemoteScript, checkExcludeUrl, checkIgnoreUrl } from './scripts'\nimport microApp from '../micro_app'\nimport globalEnv from '../libs/global_env'\n\n// Record element and map element\nconst dynamicElementInMicroAppMap = new WeakMap<Node, Element | Comment>()\n\n/**\n * Process the new node and format the style, link and script element\n * @param parent parent node\n * @param child new node\n * @param app app\n */\nfunction handleNewNode (parent: Node, child: Node, app: AppInterface): Node {\n  if (child instanceof HTMLStyleElement) {\n    if (child.hasAttribute('exclude')) {\n      const replaceComment = document.createComment('style element with exclude attribute ignored by micro-app')\n      dynamicElementInMicroAppMap.set(child, replaceComment)\n      return replaceComment\n    } else if (app.scopecss && !child.hasAttribute('ignore')) {\n      return scopedCSS(child, app)\n    }\n    return child\n  } else if (child instanceof HTMLLinkElement) {\n    if (child.hasAttribute('exclude') || checkExcludeUrl(child.getAttribute('href'), app.name)) {\n      const linkReplaceComment = document.createComment('link element with exclude attribute ignored by micro-app')\n      dynamicElementInMicroAppMap.set(child, linkReplaceComment)\n      return linkReplaceComment\n    } else if (\n      child.hasAttribute('ignore') ||\n      checkIgnoreUrl(child.getAttribute('href'), app.name) ||\n      (\n        child.href &&\n        isFunction(microApp.excludeAssetFilter) &&\n        microApp.excludeAssetFilter!(child.href)\n      )\n    ) {\n      return child\n    }\n\n    const { url, info, replaceComment } = extractLinkFromHtml(\n      child,\n      parent,\n      app,\n      true,\n    )\n\n    if (url && info) {\n      const replaceStyle = pureCreateElement('style')\n      replaceStyle.__MICRO_APP_LINK_PATH__ = url\n      formatDynamicLink(url, info, app, child, replaceStyle)\n      dynamicElementInMicroAppMap.set(child, replaceStyle)\n      return replaceStyle\n    } else if (replaceComment) {\n      dynamicElementInMicroAppMap.set(child, replaceComment)\n      return replaceComment\n    }\n\n    return child\n  } else if (child instanceof HTMLScriptElement) {\n    if (\n      child.src &&\n      isFunction(microApp.excludeAssetFilter) &&\n      microApp.excludeAssetFilter!(child.src)\n    ) {\n      return child\n    }\n\n    const { replaceComment, url, info } = extractScriptElement(\n      child,\n      parent,\n      app,\n      true,\n    ) || {}\n\n    if (url && info) {\n      if (!info.isExternal) { // inline script\n        const replaceElement = runScript(url, app, info, true)\n        dynamicElementInMicroAppMap.set(child, replaceElement)\n        return replaceElement\n      } else { // remote script\n        const replaceElement = runDynamicRemoteScript(url, info, app, child)\n        dynamicElementInMicroAppMap.set(child, replaceElement)\n        return replaceElement\n      }\n    } else if (replaceComment) {\n      dynamicElementInMicroAppMap.set(child, replaceComment)\n      return replaceComment\n    }\n\n    return child\n  }\n\n  return child\n}\n\n/**\n * Handle the elements inserted into head and body, and execute normally in other cases\n * @param app app\n * @param method raw method\n * @param parent parent node\n * @param targetChild target node\n * @param passiveChild second param of insertBefore and replaceChild\n */\nfunction invokePrototypeMethod (\n  app: AppInterface,\n  rawMethod: Func,\n  parent: Node,\n  targetChild: Node,\n  passiveChild?: Node | null,\n): any {\n  const container = getContainer(parent, app)\n  /**\n   * If passiveChild is not the child node, insertBefore replaceChild will have a problem, at this time, it will be degraded to appendChild\n   * E.g: document.head.insertBefore(targetChild, document.head.childNodes[0])\n   */\n  if (container) {\n    /**\n     * 1. If passiveChild exists, it must be insertBefore or replaceChild\n     * 2. When removeChild, targetChild may not be in microAppHead or head\n     */\n    if (passiveChild && !container.contains(passiveChild)) {\n      return globalEnv.rawAppendChild.call(container, targetChild)\n    } else if (rawMethod === globalEnv.rawRemoveChild && !container.contains(targetChild)) {\n      if (parent.contains(targetChild)) {\n        return rawMethod.call(parent, targetChild)\n      }\n      return targetChild\n    }\n\n    return invokeRawMethod(rawMethod, container, targetChild, passiveChild)\n  }\n\n  return invokeRawMethod(rawMethod, parent, targetChild, passiveChild)\n}\n\nfunction invokeRawMethod (\n  rawMethod: Func,\n  parent: Node,\n  targetChild: Node,\n  passiveChild?: Node | null\n) {\n  if (isPendMethod(rawMethod)) {\n    return rawMethod.call(parent, targetChild)\n  }\n\n  return rawMethod.call(parent, targetChild, passiveChild)\n}\n\nfunction isPendMethod (method: CallableFunction) {\n  return method === globalEnv.rawAppend || method === globalEnv.rawPrepend\n}\n\nfunction getContainer (node: Node, app: AppInterface) {\n  if (node === document.head) {\n    return app?.container?.querySelector('micro-app-head')\n  }\n  if (node === document.body) {\n    return app?.container?.querySelector('micro-app-body')\n  }\n  return null\n}\n\n// Get the map element\nfunction getMappingNode (node: Node): Node {\n  return dynamicElementInMicroAppMap.get(node) ?? node\n}\n\n/**\n * method of handle new node\n * @param parent parent node\n * @param newChild new node\n * @param passiveChild passive node\n * @param rawMethod method\n */\nfunction commonElementHandler (\n  parent: Node,\n  newChild: Node,\n  passiveChild: Node | null,\n  rawMethod: Func,\n) {\n  if (newChild?.__MICRO_APP_NAME__) {\n    const app = appInstanceMap.get(newChild.__MICRO_APP_NAME__)\n    if (app?.container) {\n      return invokePrototypeMethod(\n        app,\n        rawMethod,\n        parent,\n        handleNewNode(parent, newChild, app),\n        passiveChild && getMappingNode(passiveChild),\n      )\n    } else if (rawMethod === globalEnv.rawAppend || rawMethod === globalEnv.rawPrepend) {\n      return rawMethod.call(parent, newChild)\n    }\n    return rawMethod.call(parent, newChild, passiveChild)\n  } else if (rawMethod === globalEnv.rawAppend || rawMethod === globalEnv.rawPrepend) {\n    const appName = getCurrentAppName()\n    if (!(newChild instanceof Node) && appName) {\n      const app = appInstanceMap.get(appName)\n      if (app?.container) {\n        if (parent === document.head) {\n          return rawMethod.call(app.container.querySelector('micro-app-head'), newChild)\n        } else if (parent === document.body) {\n          return rawMethod.call(app.container.querySelector('micro-app-body'), newChild)\n        }\n      }\n    }\n    return rawMethod.call(parent, newChild)\n  }\n\n  return rawMethod.call(parent, newChild, passiveChild)\n}\n\n/**\n * Rewrite element prototype method\n */\nexport function patchElementPrototypeMethods (): void {\n  patchDocument()\n\n  // prototype methods of add element👇\n  Element.prototype.appendChild = function appendChild<T extends Node> (newChild: T): T {\n    return commonElementHandler(this, newChild, null, globalEnv.rawAppendChild)\n  }\n\n  Element.prototype.insertBefore = function insertBefore<T extends Node> (newChild: T, refChild: Node | null): T {\n    return commonElementHandler(this, newChild, refChild, globalEnv.rawInsertBefore)\n  }\n\n  Element.prototype.replaceChild = function replaceChild<T extends Node> (newChild: Node, oldChild: T): T {\n    return commonElementHandler(this, newChild, oldChild, globalEnv.rawReplaceChild)\n  }\n\n  Element.prototype.append = function append (...nodes: (Node | string)[]): void {\n    let i = 0\n    const length = nodes.length\n    while (i < length) {\n      commonElementHandler(this, nodes[i] as Node, null, globalEnv.rawAppend)\n      i++\n    }\n  }\n\n  Element.prototype.prepend = function prepend (...nodes: (Node | string)[]): void {\n    let i = nodes.length\n    while (i > 0) {\n      commonElementHandler(this, nodes[i - 1] as Node, null, globalEnv.rawPrepend)\n      i--\n    }\n  }\n\n  // prototype methods of delete element👇\n  Element.prototype.removeChild = function removeChild<T extends Node> (oldChild: T): T {\n    if (oldChild?.__MICRO_APP_NAME__) {\n      const app = appInstanceMap.get(oldChild.__MICRO_APP_NAME__)\n      if (app?.container) {\n        return invokePrototypeMethod(\n          app,\n          globalEnv.rawRemoveChild,\n          this,\n          getMappingNode(oldChild),\n        )\n      }\n      return globalEnv.rawRemoveChild.call(this, oldChild) as T\n    }\n\n    return globalEnv.rawRemoveChild.call(this, oldChild) as T\n  }\n\n  // patch cloneNode\n  Element.prototype.cloneNode = function cloneNode (deep?: boolean): Node {\n    const clonedNode = globalEnv.rawCloneNode.call(this, deep)\n    this.__MICRO_APP_NAME__ && (clonedNode.__MICRO_APP_NAME__ = this.__MICRO_APP_NAME__)\n    return clonedNode\n  }\n\n  // patch getBoundingClientRect\n  // TODO: scenes test\n  // Element.prototype.getBoundingClientRect = function getBoundingClientRect () {\n  //   const rawRect: DOMRect = globalEnv.rawGetBoundingClientRect.call(this)\n  //   if (this.__MICRO_APP_NAME__) {\n  //     const app = appInstanceMap.get(this.__MICRO_APP_NAME__)\n  //     if (!app?.container) {\n  //       return rawRect\n  //     }\n  //     const appBody = app.container.querySelector('micro-app-body')\n  //     const appBodyRect: DOMRect = globalEnv.rawGetBoundingClientRect.call(appBody)\n  //     const computedRect: DOMRect = new DOMRect(\n  //       rawRect.x - appBodyRect.x,\n  //       rawRect.y - appBodyRect.y,\n  //       rawRect.width,\n  //       rawRect.height,\n  //     )\n  //     return computedRect\n  //   }\n\n  //   return rawRect\n  // }\n}\n\n/**\n * Mark the newly created element in the micro application\n * @param element new element\n */\nfunction markElement <T extends { __MICRO_APP_NAME__: string }> (element: T): T {\n  const appName = getCurrentAppName()\n  if (appName) element.__MICRO_APP_NAME__ = appName\n  return element\n}\n\n// methods of document\nfunction patchDocument () {\n  const rawDocument = globalEnv.rawDocument\n\n  // create element 👇\n  Document.prototype.createElement = function createElement (\n    tagName: string,\n    options?: ElementCreationOptions,\n  ): HTMLElement {\n    const element = globalEnv.rawCreateElement.call(this, tagName, options)\n    return markElement(element)\n  }\n\n  Document.prototype.createElementNS = function createElementNS (\n    namespaceURI: string,\n    name: string,\n    options?: string | ElementCreationOptions,\n  ): any {\n    const element = globalEnv.rawCreateElementNS.call(this, namespaceURI, name, options)\n    return markElement(element)\n  }\n\n  Document.prototype.createDocumentFragment = function createDocumentFragment (): DocumentFragment {\n    const element = globalEnv.rawCreateDocumentFragment.call(this)\n    return markElement(element)\n  }\n\n  // query element👇\n  function querySelector (this: Document, selectors: string): any {\n    const appName = getCurrentAppName()\n    if (\n      !appName ||\n      !selectors ||\n      isUniqueElement(selectors) ||\n      // see https://github.com/micro-zoe/micro-app/issues/56\n      rawDocument !== this\n    ) {\n      return globalEnv.rawQuerySelector.call(this, selectors)\n    }\n    return appInstanceMap.get(appName)?.container?.querySelector(selectors) ?? null\n  }\n\n  function querySelectorAll (this: Document, selectors: string): any {\n    const appName = getCurrentAppName()\n    if (\n      !appName ||\n      !selectors ||\n      isUniqueElement(selectors) ||\n      rawDocument !== this\n    ) {\n      return globalEnv.rawQuerySelectorAll.call(this, selectors)\n    }\n    return appInstanceMap.get(appName)?.container?.querySelectorAll(selectors) ?? []\n  }\n\n  Document.prototype.querySelector = querySelector\n  Document.prototype.querySelectorAll = querySelectorAll\n\n  Document.prototype.getElementById = function getElementById (key: string): HTMLElement | null {\n    if (!getCurrentAppName() || isInvalidQuerySelectorKey(key)) {\n      return globalEnv.rawGetElementById.call(this, key)\n    }\n\n    try {\n      return querySelector.call(this, `#${key}`)\n    } catch {\n      return globalEnv.rawGetElementById.call(this, key)\n    }\n  }\n\n  Document.prototype.getElementsByClassName = function getElementsByClassName (key: string): HTMLCollectionOf<Element> {\n    if (!getCurrentAppName() || isInvalidQuerySelectorKey(key)) {\n      return globalEnv.rawGetElementsByClassName.call(this, key)\n    }\n\n    try {\n      return querySelectorAll.call(this, `.${key}`)\n    } catch {\n      return globalEnv.rawGetElementsByClassName.call(this, key)\n    }\n  }\n\n  Document.prototype.getElementsByTagName = function getElementsByTagName (key: string): HTMLCollectionOf<Element> {\n    const appName = getCurrentAppName()\n    if (\n      !appName ||\n      isUniqueElement(key) ||\n      isInvalidQuerySelectorKey(key) ||\n      (!appInstanceMap.get(appName)?.inline && /^script$/i.test(key))\n    ) {\n      return globalEnv.rawGetElementsByTagName.call(this, key)\n    }\n\n    try {\n      return querySelectorAll.call(this, key)\n    } catch {\n      return globalEnv.rawGetElementsByTagName.call(this, key)\n    }\n  }\n\n  Document.prototype.getElementsByName = function getElementsByName (key: string): NodeListOf<HTMLElement> {\n    if (!getCurrentAppName() || isInvalidQuerySelectorKey(key)) {\n      return globalEnv.rawGetElementsByName.call(this, key)\n    }\n\n    try {\n      return querySelectorAll.call(this, `[name=${key}]`)\n    } catch {\n      return globalEnv.rawGetElementsByName.call(this, key)\n    }\n  }\n}\n\n/**\n * patchSetAttribute is different from other patch\n * it not dependent on sandbox\n * it should exec when micro-app first created & release when all app unmounted\n */\nlet hasRewriteSetAttribute = false\nexport function patchSetAttribute (): void {\n  if (hasRewriteSetAttribute) return\n  hasRewriteSetAttribute = true\n  Element.prototype.setAttribute = function setAttribute (key: string, value: string): void {\n    if (/^micro-app(-\\S+)?/i.test(this.tagName) && key === 'data') {\n      if (isPlainObject(value)) {\n        const cloneValue: Record<PropertyKey, unknown> = {}\n        Object.getOwnPropertyNames(value).forEach((propertyKey: PropertyKey) => {\n          if (!(isString(propertyKey) && propertyKey.indexOf('__') === 0)) {\n            // @ts-ignore\n            cloneValue[propertyKey] = value[propertyKey]\n          }\n        })\n        this.data = cloneValue\n      } else if (value !== '[object Object]') {\n        logWarn('property data must be an object', this.getAttribute('name'))\n      }\n    } else if (\n      (\n        ((key === 'src' || key === 'srcset') && /^(img|script)$/i.test(this.tagName)) ||\n        (key === 'href' && /^link$/i.test(this.tagName))\n      ) &&\n      this.__MICRO_APP_NAME__ &&\n      appInstanceMap.has(this.__MICRO_APP_NAME__)\n    ) {\n      const app = appInstanceMap.get(this.__MICRO_APP_NAME__)\n      globalEnv.rawSetAttribute.call(this, key, CompletionPath(value, app!.url))\n    } else {\n      globalEnv.rawSetAttribute.call(this, key, value)\n    }\n  }\n}\n\nexport function releasePatchSetAttribute (): void {\n  hasRewriteSetAttribute = false\n  Element.prototype.setAttribute = globalEnv.rawSetAttribute\n}\n\nfunction releasePatchDocument (): void {\n  Document.prototype.createElement = globalEnv.rawCreateElement\n  Document.prototype.createElementNS = globalEnv.rawCreateElementNS\n  Document.prototype.createDocumentFragment = globalEnv.rawCreateDocumentFragment\n  Document.prototype.querySelector = globalEnv.rawQuerySelector\n  Document.prototype.querySelectorAll = globalEnv.rawQuerySelectorAll\n  Document.prototype.getElementById = globalEnv.rawGetElementById\n  Document.prototype.getElementsByClassName = globalEnv.rawGetElementsByClassName\n  Document.prototype.getElementsByTagName = globalEnv.rawGetElementsByTagName\n  Document.prototype.getElementsByName = globalEnv.rawGetElementsByName\n}\n\n// release patch\nexport function releasePatches (): void {\n  setCurrentAppName(null)\n  releasePatchDocument()\n\n  Element.prototype.appendChild = globalEnv.rawAppendChild\n  Element.prototype.insertBefore = globalEnv.rawInsertBefore\n  Element.prototype.replaceChild = globalEnv.rawReplaceChild\n  Element.prototype.removeChild = globalEnv.rawRemoveChild\n  Element.prototype.append = globalEnv.rawAppend\n  Element.prototype.prepend = globalEnv.rawPrepend\n  Element.prototype.cloneNode = globalEnv.rawCloneNode\n  // Element.prototype.getBoundingClientRect = globalEnv.rawGetBoundingClientRect\n}\n\n// Set the style of micro-app-head and micro-app-body\nlet hasRejectMicroAppStyle = false\nexport function rejectMicroAppStyle (): void {\n  if (!hasRejectMicroAppStyle) {\n    hasRejectMicroAppStyle = true\n    const style = pureCreateElement('style')\n    globalEnv.rawSetAttribute.call(style, 'type', 'text/css')\n    style.textContent = `\\n${microApp.tagName}, micro-app-body { display: block; } \\nmicro-app-head { display: none; }`\n    globalEnv.rawDocument.head.appendChild(style)\n  }\n}\n","/* eslint-disable node/no-callback-literal */\nimport type {\n  AppInterface,\n  sourceScriptInfo,\n  plugins,\n  Func,\n} from '@micro-app/types'\nimport { fetchSource } from './fetch'\nimport {\n  CompletionPath,\n  promiseStream,\n  createNonceSrc,\n  pureCreateElement,\n  defer,\n  logError,\n  isUndefined,\n  isPlainObject,\n  isArray,\n  isFunction,\n} from '../libs/utils'\nimport {\n  dispatchOnLoadEvent,\n  dispatchOnErrorEvent,\n} from './load_event'\nimport microApp from '../micro_app'\nimport globalEnv from '../libs/global_env'\nimport { globalKeyToBeCached } from '../constants'\n\ntype moduleCallBack = Func & { moduleCount?: number, errorCount?: number }\n\n// Global scripts, reuse across apps\nexport const globalScripts = new Map<string, string>()\n\n/**\n * Extract script elements\n * @param script script element\n * @param parent parent element of script\n * @param app app\n * @param isDynamic dynamic insert\n */\nexport function extractScriptElement (\n  script: HTMLScriptElement,\n  parent: Node,\n  app: AppInterface,\n  isDynamic = false,\n): any {\n  let replaceComment: Comment | null = null\n  let src: string | null = script.getAttribute('src')\n  if (src) {\n    src = CompletionPath(src, app.url)\n  }\n  if (script.hasAttribute('exclude') || checkExcludeUrl(src, app.name)) {\n    replaceComment = document.createComment('script element with exclude attribute removed by micro-app')\n  } else if (\n    (script.type && !['text/javascript', 'text/ecmascript', 'application/javascript', 'application/ecmascript', 'module', 'systemjs-module', 'systemjs-importmap'].includes(script.type)) ||\n    script.hasAttribute('ignore') || checkIgnoreUrl(src, app.name)\n  ) {\n    return null\n  } else if (\n    (globalEnv.supportModuleScript && script.noModule) ||\n    (!globalEnv.supportModuleScript && script.type === 'module')\n  ) {\n    replaceComment = document.createComment(`${script.noModule ? 'noModule' : 'module'} script ignored by micro-app`)\n  } else if (src) { // remote script\n    const info = {\n      code: '',\n      isExternal: true,\n      isDynamic: isDynamic,\n      async: script.hasAttribute('async'),\n      defer: script.defer || script.type === 'module',\n      module: script.type === 'module',\n      isGlobal: script.hasAttribute('global'),\n    }\n    if (!isDynamic) {\n      app.source.scripts.set(src, info)\n      replaceComment = document.createComment(`script with src='${src}' extract by micro-app`)\n    } else {\n      return { url: src, info }\n    }\n  } else if (script.textContent) { // inline script\n    const nonceStr: string = createNonceSrc()\n    const info = {\n      code: script.textContent,\n      isExternal: false,\n      isDynamic: isDynamic,\n      async: false,\n      defer: script.type === 'module',\n      module: script.type === 'module',\n    }\n    if (!isDynamic) {\n      app.source.scripts.set(nonceStr, info)\n      replaceComment = document.createComment('inline script extract by micro-app')\n    } else {\n      return { url: nonceStr, info }\n    }\n  } else if (!isDynamic) {\n    /**\n     * script with empty src or empty script.textContent remove in static html\n     * & not removed if it created by dynamic\n     */\n    replaceComment = document.createComment('script element removed by micro-app')\n  }\n\n  if (isDynamic) {\n    return { replaceComment }\n  } else {\n    return parent.replaceChild(replaceComment!, script)\n  }\n}\n\n/**\n * get assets plugins\n * @param appName app name\n */\nexport function getAssetsPlugins (appName: string): plugins['global'] {\n  const globalPlugins = microApp.plugins?.global || []\n  const modulePlugins = microApp.plugins?.modules?.[appName] || []\n\n  return [...globalPlugins, ...modulePlugins]\n}\n\n/**\n * whether the url needs to be excluded\n * @param url css or js link\n * @param plugins microApp plugins\n */\nexport function checkExcludeUrl (url: string | null, appName: string): boolean {\n  if (!url) return false\n  const plugins = getAssetsPlugins(appName) || []\n  return plugins.some(plugin => {\n    if (!plugin.excludeChecker) return false\n    return plugin.excludeChecker(url)\n  })\n}\n\n/**\n * whether the url needs to be ignore\n * @param url css or js link\n * @param plugins microApp plugins\n */\nexport function checkIgnoreUrl (url: string | null, appName: string): boolean {\n  if (!url) return false\n  const plugins = getAssetsPlugins(appName) || []\n  return plugins.some(plugin => {\n    if (!plugin.ignoreChecker) return false\n    return plugin.ignoreChecker(url)\n  })\n}\n\n/**\n *  Get remote resources of script\n * @param wrapElement htmlDom\n * @param app app\n */\nexport function fetchScriptsFromHtml (\n  wrapElement: HTMLElement,\n  app: AppInterface,\n): void {\n  const scriptEntries: Array<[string, sourceScriptInfo]> = Array.from(app.source.scripts.entries())\n  const fetchScriptPromise: Promise<string>[] = []\n  const fetchScriptPromiseInfo: Array<[string, sourceScriptInfo]> = []\n  for (const [url, info] of scriptEntries) {\n    if (info.isExternal) {\n      const globalScriptText = globalScripts.get(url)\n      if (globalScriptText) {\n        info.code = globalScriptText\n      } else if ((!info.defer && !info.async) || app.isPrefetch) {\n        fetchScriptPromise.push(fetchSource(url, app.name))\n        fetchScriptPromiseInfo.push([url, info])\n      }\n    }\n  }\n\n  if (fetchScriptPromise.length) {\n    promiseStream<string>(fetchScriptPromise, (res: {data: string, index: number}) => {\n      fetchScriptSuccess(\n        fetchScriptPromiseInfo[res.index][0],\n        fetchScriptPromiseInfo[res.index][1],\n        res.data,\n      )\n    }, (err: {error: Error, index: number}) => {\n      logError(err, app.name)\n    }, () => {\n      app.onLoad(wrapElement)\n    })\n  } else {\n    app.onLoad(wrapElement)\n  }\n}\n\n/**\n * fetch js succeeded, record the code value\n * @param url script address\n * @param info resource script info\n * @param data code\n */\nexport function fetchScriptSuccess (\n  url: string,\n  info: sourceScriptInfo,\n  data: string,\n): void {\n  if (info.isGlobal && !globalScripts.has(url)) {\n    globalScripts.set(url, data)\n  }\n\n  info.code = data\n}\n\n/**\n * Execute js in the mount lifecycle\n * @param scriptList script list\n * @param app app\n * @param initHook callback for umd mode\n */\nexport function execScripts (\n  scriptList: Map<string, sourceScriptInfo>,\n  app: AppInterface,\n  initHook: moduleCallBack,\n): void {\n  const scriptListEntries: Array<[string, sourceScriptInfo]> = Array.from(scriptList.entries())\n  const deferScriptPromise: Array<Promise<string>|string> = []\n  const deferScriptInfo: Array<[string, sourceScriptInfo]> = []\n  for (const [url, info] of scriptListEntries) {\n    if (!info.isDynamic) {\n      // Notice the second render\n      if (info.defer || info.async) {\n        if (info.isExternal && !info.code) {\n          deferScriptPromise.push(fetchSource(url, app.name))\n        } else {\n          deferScriptPromise.push(info.code)\n        }\n        deferScriptInfo.push([url, info])\n\n        info.module && (initHook.moduleCount = initHook.moduleCount ? ++initHook.moduleCount : 1)\n      } else {\n        runScript(url, app, info, false)\n        initHook(false)\n      }\n    }\n  }\n\n  if (deferScriptPromise.length) {\n    promiseStream<string>(deferScriptPromise, (res: {data: string, index: number}) => {\n      const info = deferScriptInfo[res.index][1]\n      info.code = info.code || res.data\n    }, (err: {error: Error, index: number}) => {\n      initHook.errorCount = initHook.errorCount ? ++initHook.errorCount : 1\n      logError(err, app.name)\n    }, () => {\n      deferScriptInfo.forEach(([url, info]) => {\n        if (info.code) {\n          runScript(url, app, info, false, initHook)\n          !info.module && initHook(false)\n        }\n      })\n      initHook(\n        isUndefined(initHook.moduleCount) ||\n        initHook.errorCount === deferScriptPromise.length\n      )\n    })\n  } else {\n    initHook(true)\n  }\n}\n\n/**\n * run code\n * @param url script address\n * @param app app\n * @param info script info\n * @param isDynamic dynamically created script\n * @param callback callback of module script\n */\nexport function runScript (\n  url: string,\n  app: AppInterface,\n  info: sourceScriptInfo,\n  isDynamic: boolean,\n  callback?: moduleCallBack,\n): any {\n  try {\n    const code = bindScope(url, app, info.code, info)\n    if (app.inline || info.module) {\n      const scriptElement = pureCreateElement('script')\n      runCode2InlineScript(url, code, info.module, scriptElement, callback)\n      if (isDynamic) return scriptElement\n      // TEST IGNORE\n      app.container?.querySelector('micro-app-body')!.appendChild(scriptElement)\n    } else {\n      runCode2Function(code, info)\n      if (isDynamic) return document.createComment('dynamic script extract by micro-app')\n    }\n  } catch (e) {\n    console.error(`[micro-app from runScript] app ${app.name}: `, e)\n  }\n}\n\n/**\n * Get dynamically created remote script\n * @param url script address\n * @param info info\n * @param app app\n * @param originScript origin script element\n */\nexport function runDynamicRemoteScript (\n  url: string,\n  info: sourceScriptInfo,\n  app: AppInterface,\n  originScript: HTMLScriptElement,\n): HTMLScriptElement | Comment {\n  const dispatchScriptOnLoadEvent = () => dispatchOnLoadEvent(originScript)\n\n  // url is unique\n  if (app.source.scripts.has(url)) {\n    const existInfo: sourceScriptInfo = app.source.scripts.get(url)!\n    !existInfo.module && defer(dispatchScriptOnLoadEvent)\n    return runScript(url, app, existInfo, true, dispatchScriptOnLoadEvent)\n  }\n\n  if (globalScripts.has(url)) {\n    const code = globalScripts.get(url)!\n    info.code = code\n    app.source.scripts.set(url, info)\n    !info.module && defer(dispatchScriptOnLoadEvent)\n    return runScript(url, app, info, true, dispatchScriptOnLoadEvent)\n  }\n\n  let replaceElement: Comment | HTMLScriptElement\n  if (app.inline || info.module) {\n    replaceElement = pureCreateElement('script')\n  } else {\n    replaceElement = document.createComment(`dynamic script with src='${url}' extract by micro-app`)\n  }\n\n  fetchSource(url, app.name).then((code: string) => {\n    info.code = code\n    app.source.scripts.set(url, info)\n    info.isGlobal && globalScripts.set(url, code)\n    try {\n      code = bindScope(url, app, code, info)\n      if (app.inline || info.module) {\n        runCode2InlineScript(url, code, info.module, replaceElement as HTMLScriptElement, dispatchScriptOnLoadEvent)\n      } else {\n        runCode2Function(code, info)\n      }\n    } catch (e) {\n      console.error(`[micro-app from runDynamicScript] app ${app.name}: `, e, url)\n    }\n    !info.module && dispatchOnLoadEvent(originScript)\n  }).catch((err) => {\n    logError(err, app.name)\n    dispatchOnErrorEvent(originScript)\n  })\n\n  return replaceElement\n}\n\n/**\n * common handle for inline script\n * @param url script address\n * @param code bound code\n * @param module type='module' of script\n * @param scriptElement target script element\n * @param callback callback of module script\n */\nfunction runCode2InlineScript (\n  url: string,\n  code: string,\n  module: boolean,\n  scriptElement: HTMLScriptElement,\n  callback?: moduleCallBack,\n): void {\n  if (module) {\n    // module script is async, transform it to a blob for subsequent operations\n    const blob = new Blob([code], { type: 'text/javascript' })\n    scriptElement.src = URL.createObjectURL(blob)\n    scriptElement.setAttribute('type', 'module')\n    if (callback) {\n      callback.moduleCount && callback.moduleCount--\n      scriptElement.onload = callback.bind(scriptElement, callback.moduleCount === 0)\n    }\n  } else {\n    scriptElement.textContent = code\n  }\n\n  if (!url.startsWith('inline-')) {\n    scriptElement.setAttribute('data-origin-src', url)\n  }\n}\n\n// init & run code2Function\nfunction runCode2Function (code: string, info: sourceScriptInfo) {\n  if (!info.code2Function) {\n    info.code2Function = new Function(code)\n  }\n  info.code2Function.call(window)\n}\n\n/**\n * bind js scope\n * @param url script address\n * @param app app\n * @param code code\n * @param info source script info\n */\nfunction bindScope (\n  url: string,\n  app: AppInterface,\n  code: string,\n  info: sourceScriptInfo,\n): string {\n  if (isPlainObject(microApp.plugins)) {\n    code = usePlugins(url, code, app.name, microApp.plugins!, info)\n  }\n\n  if (app.sandBox && !info.module) {\n    globalEnv.rawWindow.__MICRO_APP_PROXY_WINDOW__ = app.sandBox.proxyWindow\n    return `;(function(proxyWindow){with(proxyWindow.__MICRO_APP_WINDOW__){(function(${globalKeyToBeCached}){;${code}\\n}).call(proxyWindow,${globalKeyToBeCached})}})(window.__MICRO_APP_PROXY_WINDOW__);`\n  }\n\n  return code\n}\n\n/**\n * Call the plugin to process the file\n * @param url script address\n * @param code code\n * @param appName app name\n * @param plugins plugin list\n * @param info source script info\n */\nfunction usePlugins (url: string, code: string, appName: string, plugins: plugins, info: sourceScriptInfo): string {\n  const newCode = processCode(plugins.global, code, url, info)\n\n  return processCode(plugins.modules?.[appName], newCode, url, info)\n}\n\nfunction processCode (configs: plugins['global'], code: string, url: string, info: sourceScriptInfo) {\n  if (!isArray(configs)) {\n    return code\n  }\n\n  return configs.reduce((preCode, config) => {\n    if (isPlainObject(config) && isFunction(config.loader)) {\n      return config.loader!(preCode, url, config.options, info)\n    }\n\n    return preCode\n  }, code)\n}\n","import { appInstanceMap } from './create_app'\nimport { AppInterface } from '@micro-app/types'\n\nexport interface IAppManager {\n  get(appName: string): AppInterface | undefined\n  set(appName: string, app: AppInterface): void\n  getAll(): AppInterface[]\n  clear(): void\n}\n\n// 管理 app 的单例\nexport class AppManager implements IAppManager {\n  private static instance: AppManager;\n  // Todo: appInstanceMap 由 AppManager 来创建，不再由 create_app 管理\n  private appInstanceMap = appInstanceMap;\n\n  public static getInstance (): AppManager {\n    if (!this.instance) {\n      this.instance = new AppManager()\n    }\n    return this.instance\n  }\n\n  public get (appName: string): AppInterface | undefined {\n    return this.appInstanceMap.get(appName)\n  }\n\n  public set (appName: string, app: AppInterface): void {\n    this.appInstanceMap.set(appName, app)\n  }\n\n  public getAll (): AppInterface[] {\n    return Array.from(this.appInstanceMap.values())\n  }\n\n  public clear (): void {\n    this.appInstanceMap.clear()\n  }\n}\n","import { AppManager } from '../app_manager'\nimport { getRootContainer } from '../libs/utils'\n\nfunction unmountNestedApp (): void {\n  releaseUnmountOfNestedApp()\n\n  AppManager.getInstance().getAll().forEach(app => {\n    // @ts-ignore\n    app.container && getRootContainer(app.container).disconnectedCallback()\n  })\n\n  !window.__MICRO_APP_UMD_MODE__ && AppManager.getInstance().clear()\n}\n\n// if micro-app run in micro application, delete all next generation application when unmount event received\nexport function listenUmountOfNestedApp (): void {\n  if (window.__MICRO_APP_ENVIRONMENT__) {\n    window.addEventListener('unmount', unmountNestedApp, false)\n  }\n}\n\n// release listener\nexport function releaseUnmountOfNestedApp (): void {\n  if (window.__MICRO_APP_ENVIRONMENT__) {\n    window.removeEventListener('unmount', unmountNestedApp, false)\n  }\n}\n","import { isSupportModuleScript, isBrowser, getCurrentAppName } from './utils'\nimport { rejectMicroAppStyle } from '../source/patch'\nimport { listenUmountOfNestedApp, releaseUnmountOfNestedApp } from '../libs/additional'\n\ntype RequestIdleCallbackOptions = {\n  timeout: number\n}\n\ntype RequestIdleCallbackInfo = {\n  readonly didTimeout: boolean\n  timeRemaining: () => number\n}\n\ndeclare global {\n  interface Window {\n    requestIdleCallback (\n      callback: (info: RequestIdleCallbackInfo) => void,\n      opts?: RequestIdleCallbackOptions,\n    ): number\n    _babelPolyfill: boolean\n    __MICRO_APP_ENVIRONMENT__?: boolean\n    __MICRO_APP_UMD_MODE__?: boolean\n    __MICRO_APP_BASE_APPLICATION__?: boolean\n  }\n\n  interface Node {\n    __MICRO_APP_NAME__?: string | null\n    data?: any\n  }\n\n  interface HTMLStyleElement {\n    __MICRO_APP_LINK_PATH__?: string\n    __MICRO_APP_HAS_SCOPED__?: boolean\n  }\n}\n\nconst globalEnv: Record<string, any> = {}\n\n/**\n * Note loop nesting\n * Only prototype or unique values can be put here\n */\nexport function initGlobalEnv (): void {\n  if (isBrowser) {\n    /**\n     * save patch raw methods\n     * pay attention to this binding\n     */\n    const rawSetAttribute = Element.prototype.setAttribute\n    const rawAppendChild = Element.prototype.appendChild\n    const rawInsertBefore = Element.prototype.insertBefore\n    const rawReplaceChild = Element.prototype.replaceChild\n    const rawRemoveChild = Element.prototype.removeChild\n    const rawAppend = Element.prototype.append\n    const rawPrepend = Element.prototype.prepend\n    const rawCloneNode = Element.prototype.cloneNode\n    // const rawGetBoundingClientRect = Element.prototype.getBoundingClientRect\n\n    const rawCreateElement = Document.prototype.createElement\n    const rawCreateElementNS = Document.prototype.createElementNS\n    const rawCreateDocumentFragment = Document.prototype.createDocumentFragment\n    const rawQuerySelector = Document.prototype.querySelector\n    const rawQuerySelectorAll = Document.prototype.querySelectorAll\n    const rawGetElementById = Document.prototype.getElementById\n    const rawGetElementsByClassName = Document.prototype.getElementsByClassName\n    const rawGetElementsByTagName = Document.prototype.getElementsByTagName\n    const rawGetElementsByName = Document.prototype.getElementsByName\n\n    const ImageProxy = new Proxy(Image, {\n      construct (Target, args): HTMLImageElement {\n        const elementImage = new Target(...args)\n        elementImage.__MICRO_APP_NAME__ = getCurrentAppName()\n        return elementImage\n      },\n    })\n\n    const rawWindow = Function('return window')()\n    const rawDocument = Function('return document')()\n    const supportModuleScript = isSupportModuleScript()\n\n    /**\n     * save effect raw methods\n     * pay attention to this binding, especially setInterval, setTimeout, clearInterval, clearTimeout\n     */\n    const rawWindowAddEventListener = rawWindow.addEventListener\n    const rawWindowRemoveEventListener = rawWindow.removeEventListener\n    const rawSetInterval = rawWindow.setInterval\n    const rawSetTimeout = rawWindow.setTimeout\n    const rawClearInterval = rawWindow.clearInterval\n    const rawClearTimeout = rawWindow.clearTimeout\n\n    const rawDocumentAddEventListener = rawDocument.addEventListener\n    const rawDocumentRemoveEventListener = rawDocument.removeEventListener\n\n    // mark current application as base application\n    window.__MICRO_APP_BASE_APPLICATION__ = true\n\n    Object.assign(globalEnv, {\n      // source/patch\n      rawSetAttribute,\n      rawAppendChild,\n      rawInsertBefore,\n      rawReplaceChild,\n      rawRemoveChild,\n      rawAppend,\n      rawPrepend,\n      rawCloneNode,\n      // rawGetBoundingClientRect,\n      rawCreateElement,\n      rawCreateElementNS,\n      rawCreateDocumentFragment,\n      rawQuerySelector,\n      rawQuerySelectorAll,\n      rawGetElementById,\n      rawGetElementsByClassName,\n      rawGetElementsByTagName,\n      rawGetElementsByName,\n      ImageProxy,\n\n      // common global vars\n      rawWindow,\n      rawDocument,\n      supportModuleScript,\n\n      // sandbox/effect\n      rawWindowAddEventListener,\n      rawWindowRemoveEventListener,\n      rawSetInterval,\n      rawSetTimeout,\n      rawClearInterval,\n      rawClearTimeout,\n      rawDocumentAddEventListener,\n      rawDocumentRemoveEventListener,\n    })\n\n    // global effect\n    rejectMicroAppStyle()\n    releaseUnmountOfNestedApp()\n    listenUmountOfNestedApp()\n  }\n}\n\nexport default globalEnv\n","import type { AppInterface } from '@micro-app/types'\nimport {\n  logError,\n  CompletionPath,\n  pureCreateElement,\n} from '../libs/utils'\nimport { extractLinkFromHtml, fetchLinksFromHtml } from './links'\nimport { extractScriptElement, fetchScriptsFromHtml, checkExcludeUrl, checkIgnoreUrl } from './scripts'\nimport scopedCSS from './scoped_css'\n\n/**\n * transform html string to dom\n * @param str string dom\n */\nfunction getWrapElement (str: string): HTMLElement {\n  const wrapDiv = pureCreateElement('div')\n\n  wrapDiv.innerHTML = str\n\n  return wrapDiv\n}\n\n/**\n * Recursively process each child element\n * @param parent parent element\n * @param app app\n * @param microAppHead micro-app-head element\n */\nfunction flatChildren (\n  parent: HTMLElement,\n  app: AppInterface,\n  microAppHead: Element,\n): void {\n  const children = Array.from(parent.children)\n\n  children.length && children.forEach((child) => {\n    flatChildren(child as HTMLElement, app, microAppHead)\n  })\n\n  for (const dom of children) {\n    if (dom instanceof HTMLLinkElement) {\n      if (dom.hasAttribute('exclude') || checkExcludeUrl(dom.getAttribute('href'), app.name)) {\n        parent.replaceChild(document.createComment('link element with exclude attribute ignored by micro-app'), dom)\n      } else if (!(dom.hasAttribute('ignore') || checkIgnoreUrl(dom.getAttribute('href'), app.name))) {\n        extractLinkFromHtml(dom, parent, app)\n      } else if (dom.hasAttribute('href')) {\n        dom.setAttribute('href', CompletionPath(dom.getAttribute('href')!, app.url))\n      }\n    } else if (dom instanceof HTMLStyleElement) {\n      if (dom.hasAttribute('exclude')) {\n        parent.replaceChild(document.createComment('style element with exclude attribute ignored by micro-app'), dom)\n      } else if (app.scopecss && !dom.hasAttribute('ignore')) {\n        scopedCSS(dom, app)\n      }\n    } else if (dom instanceof HTMLScriptElement) {\n      extractScriptElement(dom, parent, app)\n    } else if (dom instanceof HTMLMetaElement || dom instanceof HTMLTitleElement) {\n      parent.removeChild(dom)\n    } else if (dom instanceof HTMLImageElement && dom.hasAttribute('src')) {\n      dom.setAttribute('src', CompletionPath(dom.getAttribute('src')!, app.url))\n    }\n  }\n}\n\n/**\n * Extract link and script, bind style scope\n * @param htmlStr html string\n * @param app app\n */\nexport function extractSourceDom (htmlStr: string, app: AppInterface) {\n  const wrapElement = getWrapElement(htmlStr)\n  const microAppHead = wrapElement.querySelector('micro-app-head')\n  const microAppBody = wrapElement.querySelector('micro-app-body')\n\n  if (!microAppHead || !microAppBody) {\n    const msg = `element ${microAppHead ? 'body' : 'head'} is missing`\n    app.onerror(new Error(msg))\n    return logError(msg, app.name)\n  }\n\n  flatChildren(wrapElement, app, microAppHead)\n\n  if (app.source.links.size) {\n    fetchLinksFromHtml(wrapElement, app, microAppHead)\n  } else {\n    app.onLoad(wrapElement)\n  }\n\n  if (app.source.scripts.size) {\n    fetchScriptsFromHtml(wrapElement, app)\n  } else {\n    app.onLoad(wrapElement)\n  }\n}\n","import { CallableFunctionForInteract } from '@micro-app/types'\nimport EventCenter from './event_center'\nimport { appInstanceMap } from '../create_app'\nimport {\n  removeDomScope,\n  isString,\n  isFunction,\n  isPlainObject,\n  formatAppName,\n  logError,\n  getRootContainer,\n} from '../libs/utils'\n\nconst eventCenter = new EventCenter()\n\n/**\n * Format event name\n * @param appName app.name\n * @param fromBaseApp is from base app\n */\nfunction formatEventName (appName: string, fromBaseApp: boolean): string {\n  if (!isString(appName) || !appName) return ''\n  return fromBaseApp ? `__from_base_app_${appName}__` : `__from_micro_app_${appName}__`\n}\n\n// Global data\nclass EventCenterForGlobal {\n  /**\n   * add listener of global data\n   * @param cb listener\n   * @param autoTrigger If there is cached data when first bind listener, whether it needs to trigger, default is false\n   */\n  addGlobalDataListener (cb: CallableFunctionForInteract, autoTrigger?: boolean): void {\n    const appName = (this as any).appName\n    // if appName exists, this is in sub app\n    if (appName) {\n      cb.__APP_NAME__ = appName\n      cb.__AUTO_TRIGGER__ = autoTrigger\n    }\n    eventCenter.on('global', cb, autoTrigger)\n  }\n\n  /**\n   * remove listener of global data\n   * @param cb listener\n   */\n  removeGlobalDataListener (cb: CallableFunctionForInteract): void {\n    isFunction(cb) && eventCenter.off('global', cb)\n  }\n\n  /**\n   * dispatch global data\n   * @param data data\n   */\n  setGlobalData (data: Record<PropertyKey, unknown>): void {\n    // clear dom scope before dispatch global data, apply to micro app\n    removeDomScope()\n\n    eventCenter.dispatch('global', data)\n  }\n\n  /**\n   * get global data\n   */\n  getGlobalData (): Record<PropertyKey, unknown> | null {\n    return eventCenter.getData('global')\n  }\n\n  /**\n   * clear all listener of global data\n   * if appName exists, only the specified functions is cleared\n   * if appName not exists, only clear the base app functions\n   */\n  clearGlobalDataListener (): void {\n    const appName = (this as any).appName\n    const eventInfo = eventCenter.eventList.get('global')\n    if (eventInfo) {\n      for (const cb of eventInfo.callbacks) {\n        if (\n          (appName && appName === cb.__APP_NAME__) ||\n          !(appName || cb.__APP_NAME__)\n        ) {\n          eventInfo.callbacks.delete(cb)\n        }\n      }\n    }\n  }\n}\n\n// Event center for base app\nexport class EventCenterForBaseApp extends EventCenterForGlobal {\n  /**\n   * add listener\n   * @param appName app.name\n   * @param cb listener\n   * @param autoTrigger If there is cached data when first bind listener, whether it needs to trigger, default is false\n   */\n  addDataListener (appName: string, cb: CallableFunction, autoTrigger?: boolean): void {\n    eventCenter.on(formatEventName(formatAppName(appName), false), cb, autoTrigger)\n  }\n\n  /**\n   * remove listener\n   * @param appName app.name\n   * @param cb listener\n   */\n  removeDataListener (appName: string, cb: CallableFunction): void {\n    isFunction(cb) && eventCenter.off(formatEventName(formatAppName(appName), false), cb)\n  }\n\n  /**\n   * get data from micro app or base app\n   * @param appName app.name\n   * @param fromBaseApp whether get data from base app, default is false\n   */\n  getData (appName: string, fromBaseApp = false): Record<PropertyKey, unknown> | null {\n    return eventCenter.getData(formatEventName(formatAppName(appName), fromBaseApp))\n  }\n\n  /**\n   * Dispatch data to the specified micro app\n   * @param appName app.name\n   * @param data data\n   */\n  setData (appName: string, data: Record<PropertyKey, unknown>): void {\n    eventCenter.dispatch(formatEventName(formatAppName(appName), true), data)\n  }\n\n  /**\n   * clear all listener for specified micro app\n   * @param appName app.name\n   */\n  clearDataListener (appName: string): void {\n    eventCenter.off(formatEventName(formatAppName(appName), false))\n  }\n}\n\n// Event center for sub app\nexport class EventCenterForMicroApp extends EventCenterForGlobal {\n  appName: string\n  umdDataListeners?: {\n    global: Set<CallableFunctionForInteract>,\n    normal: Set<CallableFunctionForInteract>,\n  }\n\n  constructor (appName: string) {\n    super()\n    this.appName = formatAppName(appName)\n    !this.appName && logError(`Invalid appName ${appName}`)\n  }\n\n  /**\n   * add listener, monitor the data sent by the base app\n   * @param cb listener\n   * @param autoTrigger If there is cached data when first bind listener, whether it needs to trigger, default is false\n   */\n  addDataListener (cb: CallableFunctionForInteract, autoTrigger?: boolean): void {\n    cb.__AUTO_TRIGGER__ = autoTrigger\n    eventCenter.on(formatEventName(this.appName, true), cb, autoTrigger)\n  }\n\n  /**\n   * remove listener\n   * @param cb listener\n   */\n  removeDataListener (cb: CallableFunctionForInteract): void {\n    isFunction(cb) && eventCenter.off(formatEventName(this.appName, true), cb)\n  }\n\n  /**\n   * get data from base app\n   */\n  getData (): Record<PropertyKey, unknown> | null {\n    return eventCenter.getData(formatEventName(this.appName, true))\n  }\n\n  /**\n   * dispatch data to base app\n   * @param data data\n   */\n  dispatch (data: Record<PropertyKey, unknown>): void {\n    removeDomScope()\n\n    eventCenter.dispatch(formatEventName(this.appName, false), data)\n\n    const app = appInstanceMap.get(this.appName)\n    if (app?.container && isPlainObject(data)) {\n      const event = new CustomEvent('datachange', {\n        detail: {\n          data,\n        }\n      })\n\n      getRootContainer(app.container).dispatchEvent(event)\n    }\n  }\n\n  /**\n   * clear all listeners\n   */\n  clearDataListener (): void {\n    eventCenter.off(formatEventName(this.appName, true))\n  }\n}\n\n/**\n * Record UMD function before exec umdHookMount\n * @param microAppEventCenter\n */\nexport function recordDataCenterSnapshot (microAppEventCenter: EventCenterForMicroApp): void {\n  const appName = microAppEventCenter.appName\n  microAppEventCenter.umdDataListeners = { global: new Set(), normal: new Set() }\n\n  const globalEventInfo = eventCenter.eventList.get('global')\n  if (globalEventInfo) {\n    for (const cb of globalEventInfo.callbacks) {\n      if (appName === cb.__APP_NAME__) {\n        microAppEventCenter.umdDataListeners.global.add(cb)\n      }\n    }\n  }\n\n  const subAppEventInfo = eventCenter.eventList.get(formatEventName(appName, true))\n  if (subAppEventInfo) {\n    microAppEventCenter.umdDataListeners.normal = new Set(subAppEventInfo.callbacks)\n  }\n}\n\n/**\n * Rebind the UMD function of the record before remount\n * @param microAppEventCenter instance of EventCenterForMicroApp\n */\nexport function rebuildDataCenterSnapshot (microAppEventCenter: EventCenterForMicroApp): void {\n  for (const cb of microAppEventCenter.umdDataListeners!.global) {\n    microAppEventCenter.addGlobalDataListener(cb, cb.__AUTO_TRIGGER__)\n  }\n\n  for (const cb of microAppEventCenter.umdDataListeners!.normal) {\n    microAppEventCenter.addDataListener(cb, cb.__AUTO_TRIGGER__)\n  }\n}\n","import { CallableFunctionForInteract } from '@micro-app/types'\nimport { logError, isFunction, isPlainObject } from '../libs/utils'\n\nexport default class EventCenter {\n  eventList = new Map<string, {\n    data: Record<PropertyKey, unknown>,\n    callbacks: Set<CallableFunctionForInteract>,\n  }>()\n\n  // whether the name is legal\n  isLegalName (name: string): boolean {\n    if (!name) {\n      logError('event-center: Invalid name')\n      return false\n    }\n\n    return true\n  }\n\n  /**\n   * add listener\n   * @param name event name\n   * @param f listener\n   * @param autoTrigger If there is cached data when first bind listener, whether it needs to trigger, default is false\n   */\n  on (name: string, f: CallableFunctionForInteract, autoTrigger = false): void {\n    if (this.isLegalName(name)) {\n      if (!isFunction(f)) {\n        return logError('event-center: Invalid callback function')\n      }\n\n      let eventInfo = this.eventList.get(name)\n      if (!eventInfo) {\n        eventInfo = {\n          data: {},\n          callbacks: new Set(),\n        }\n        this.eventList.set(name, eventInfo)\n      } else if (autoTrigger && Object.getOwnPropertyNames(eventInfo.data).length) {\n        // auto trigger when data not null\n        f(eventInfo.data)\n      }\n\n      eventInfo.callbacks.add(f)\n    }\n  }\n\n  // remove listener, but the data is not cleared\n  off (name: string, f?: CallableFunctionForInteract): void {\n    if (this.isLegalName(name)) {\n      const eventInfo = this.eventList.get(name)\n      if (eventInfo) {\n        if (isFunction(f)) {\n          eventInfo.callbacks.delete(f!)\n        } else {\n          eventInfo.callbacks.clear()\n        }\n      }\n    }\n  }\n\n  // dispatch data\n  dispatch (name: string, data: Record<PropertyKey, unknown>): void {\n    if (this.isLegalName(name)) {\n      if (!isPlainObject(data)) {\n        return logError('event-center: data must be object')\n      }\n      let eventInfo = this.eventList.get(name)\n      if (eventInfo) {\n        // Update when the data is not equal\n        if (eventInfo.data !== data) {\n          eventInfo.data = data\n          for (const f of eventInfo.callbacks) {\n            f(data)\n          }\n        }\n      } else {\n        eventInfo = {\n          data: data,\n          callbacks: new Set(),\n        }\n        this.eventList.set(name, eventInfo)\n      }\n    }\n  }\n\n  // get data\n  getData (name: string): Record<PropertyKey, unknown> | null {\n    const eventInfo = this.eventList.get(name)\n    return eventInfo?.data ?? null\n  }\n}\n","/* eslint-disable no-return-assign */\nimport { isBoundFunction, rawDefineProperty, isBoolean } from '../libs/utils'\n\nfunction isBoundedFunction (value: CallableFunction & {__MICRO_APP_IS_BOUND_FUNCTION__: boolean}): boolean {\n  if (isBoolean(value.__MICRO_APP_IS_BOUND_FUNCTION__)) return value.__MICRO_APP_IS_BOUND_FUNCTION__\n  return value.__MICRO_APP_IS_BOUND_FUNCTION__ = isBoundFunction(value)\n}\n\nfunction isConstructor (value: FunctionConstructor & {__MICRO_APP_IS_CONSTRUCTOR__: boolean}) {\n  if (isBoolean(value.__MICRO_APP_IS_CONSTRUCTOR__)) return value.__MICRO_APP_IS_CONSTRUCTOR__\n\n  const valueStr = value.toString()\n\n  const result = (\n    value.prototype?.constructor === value &&\n    Object.getOwnPropertyNames(value.prototype).length > 1\n  ) ||\n    /^function\\s+[A-Z]/.test(valueStr) ||\n    /^class\\s+/.test(valueStr)\n\n  return value.__MICRO_APP_IS_CONSTRUCTOR__ = result\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport default function bindFunctionToRawWindow (rawWindow: Window, value: any): unknown {\n  if (value.__MICRO_APP_BOUND_WINDOW_FUNCTION__) return value.__MICRO_APP_BOUND_WINDOW_FUNCTION__\n\n  if (!isConstructor(value) && !isBoundedFunction(value)) {\n    const bindRawWindowValue = value.bind(rawWindow)\n\n    for (const key in value) {\n      bindRawWindowValue[key] = value[key]\n    }\n\n    if (value.hasOwnProperty('prototype')) {\n      rawDefineProperty(bindRawWindowValue, 'prototype', {\n        value: value.prototype,\n        configurable: true,\n        enumerable: false,\n        writable: true,\n      })\n    }\n\n    return value.__MICRO_APP_BOUND_WINDOW_FUNCTION__ = bindRawWindowValue\n  }\n\n  return value\n}\n","import type { microAppWindowType } from '@micro-app/types'\nimport {\n  getCurrentAppName,\n  setCurrentAppName,\n  logWarn,\n  isFunction,\n  isBoundFunction,\n  rawDefineProperty,\n} from '../libs/utils'\nimport { appInstanceMap } from '../create_app'\nimport globalEnv from '../libs/global_env'\n\ntype MicroEventListener = EventListenerOrEventListenerObject & Record<string, any>\ntype timeInfo = {\n  handler: TimerHandler,\n  timeout?: number,\n  args: any[],\n}\n\n// document.onclick binding list, the binding function of each application is unique\nconst documentClickListMap = new Map<string, unknown>()\nlet hasRewriteDocumentOnClick = false\n/**\n * Rewrite document.onclick and execute it only once\n */\nfunction overwriteDocumentOnClick (): void {\n  hasRewriteDocumentOnClick = true\n  if (Object.getOwnPropertyDescriptor(document, 'onclick')) {\n    return logWarn('Cannot redefine document property onclick')\n  }\n  const rawOnClick = document.onclick\n  document.onclick = null\n  let hasDocumentClickInited = false\n\n  function onClickHandler (e: MouseEvent) {\n    documentClickListMap.forEach((f) => {\n      isFunction(f) && (f as Function).call(document, e)\n    })\n  }\n\n  rawDefineProperty(document, 'onclick', {\n    configurable: true,\n    enumerable: true,\n    get () {\n      const appName = getCurrentAppName()\n      return appName ? documentClickListMap.get(appName) : documentClickListMap.get('base')\n    },\n    set (f: GlobalEventHandlers['onclick']) {\n      const appName = getCurrentAppName()\n      if (appName) {\n        documentClickListMap.set(appName, f)\n      } else {\n        documentClickListMap.set('base', f)\n      }\n\n      if (!hasDocumentClickInited && isFunction(f)) {\n        hasDocumentClickInited = true\n        globalEnv.rawDocumentAddEventListener.call(globalEnv.rawDocument, 'click', onClickHandler, false)\n      }\n    }\n  })\n\n  rawOnClick && (document.onclick = rawOnClick)\n}\n\n/**\n * The document event is globally, we need to clear these event bindings when micro application unmounted\n */\nconst documentEventListenerMap = new Map<string, Map<string, Set<MicroEventListener>>>()\nexport function effectDocumentEvent (): void {\n  const {\n    rawDocument,\n    rawDocumentAddEventListener,\n    rawDocumentRemoveEventListener,\n  } = globalEnv\n\n  !hasRewriteDocumentOnClick && overwriteDocumentOnClick()\n\n  document.addEventListener = function (\n    type: string,\n    listener: MicroEventListener,\n    options?: boolean | AddEventListenerOptions\n  ): void {\n    const appName = getCurrentAppName()\n    /**\n     * ignore bound function of document event in umd mode, used to solve problem of react global events\n     */\n    if (appName && !(appInstanceMap.get(appName)?.umdMode && isBoundFunction(listener))) {\n      const appListenersMap = documentEventListenerMap.get(appName)\n      if (appListenersMap) {\n        const appListenerList = appListenersMap.get(type)\n        if (appListenerList) {\n          appListenerList.add(listener)\n        } else {\n          appListenersMap.set(type, new Set([listener]))\n        }\n      } else {\n        documentEventListenerMap.set(appName, new Map([[type, new Set([listener])]]))\n      }\n      listener && (listener.__MICRO_APP_MARK_OPTIONS__ = options)\n    }\n    rawDocumentAddEventListener.call(rawDocument, type, listener, options)\n  }\n\n  document.removeEventListener = function (\n    type: string,\n    listener: MicroEventListener,\n    options?: boolean | AddEventListenerOptions,\n  ): void {\n    const appName = getCurrentAppName()\n    if (appName && !(appInstanceMap.get(appName)?.umdMode && isBoundFunction(listener))) {\n      const appListenersMap = documentEventListenerMap.get(appName)\n      if (appListenersMap) {\n        const appListenerList = appListenersMap.get(type)\n        if (appListenerList?.size && appListenerList.has(listener)) {\n          appListenerList.delete(listener)\n        }\n      }\n    }\n    rawDocumentRemoveEventListener.call(rawDocument, type, listener, options)\n  }\n}\n\n// Clear the document event agent\nexport function releaseEffectDocumentEvent (): void {\n  document.addEventListener = globalEnv.rawDocumentAddEventListener\n  document.removeEventListener = globalEnv.rawDocumentRemoveEventListener\n}\n\n// this events should be sent to the specified app\nconst formatEventList = ['unmount', 'appstate-change']\n\n/**\n * Format event name\n * @param type event name\n * @param microAppWindow micro window\n */\nfunction formatEventType (type: string, microAppWindow: microAppWindowType): string {\n  if (formatEventList.includes(type)) {\n    return `${type}-${microAppWindow.__MICRO_APP_NAME__}`\n  }\n  return type\n}\n\n/**\n * Rewrite side-effect events\n * @param microAppWindow micro window\n */\nexport default function effect (microAppWindow: microAppWindowType): Record<string, CallableFunction> {\n  const appName = microAppWindow.__MICRO_APP_NAME__\n  const eventListenerMap = new Map<string, Set<MicroEventListener>>()\n  const intervalIdMap = new Map<number, timeInfo>()\n  const timeoutIdMap = new Map<number, timeInfo>()\n  const {\n    rawWindow,\n    rawDocument,\n    rawWindowAddEventListener,\n    rawWindowRemoveEventListener,\n    rawSetInterval,\n    rawSetTimeout,\n    rawClearInterval,\n    rawClearTimeout,\n    rawDocumentRemoveEventListener,\n  } = globalEnv\n\n  // listener may be null, e.g test-passive\n  microAppWindow.addEventListener = function (\n    type: string,\n    listener: MicroEventListener,\n    options?: boolean | AddEventListenerOptions,\n  ): void {\n    type = formatEventType(type, microAppWindow)\n    const listenerList = eventListenerMap.get(type)\n    if (listenerList) {\n      listenerList.add(listener)\n    } else {\n      eventListenerMap.set(type, new Set([listener]))\n    }\n    listener && (listener.__MICRO_APP_MARK_OPTIONS__ = options)\n    rawWindowAddEventListener.call(rawWindow, type, listener, options)\n  }\n\n  microAppWindow.removeEventListener = function (\n    type: string,\n    listener: MicroEventListener,\n    options?: boolean | AddEventListenerOptions,\n  ): void {\n    type = formatEventType(type, microAppWindow)\n    const listenerList = eventListenerMap.get(type)\n    if (listenerList?.size && listenerList.has(listener)) {\n      listenerList.delete(listener)\n    }\n    rawWindowRemoveEventListener.call(rawWindow, type, listener, options)\n  }\n\n  microAppWindow.setInterval = function (\n    handler: TimerHandler,\n    timeout?: number,\n    ...args: any[]\n  ): number {\n    const intervalId = rawSetInterval.call(rawWindow, handler, timeout, ...args)\n    intervalIdMap.set(intervalId, { handler, timeout, args })\n    return intervalId\n  }\n\n  microAppWindow.setTimeout = function (\n    handler: TimerHandler,\n    timeout?: number,\n    ...args: any[]\n  ): number {\n    const timeoutId = rawSetTimeout.call(rawWindow, handler, timeout, ...args)\n    timeoutIdMap.set(timeoutId, { handler, timeout, args })\n    return timeoutId\n  }\n\n  microAppWindow.clearInterval = function (intervalId: number) {\n    intervalIdMap.delete(intervalId)\n    rawClearInterval.call(rawWindow, intervalId)\n  }\n\n  microAppWindow.clearTimeout = function (timeoutId: number) {\n    timeoutIdMap.delete(timeoutId)\n    rawClearTimeout.call(rawWindow, timeoutId)\n  }\n\n  const umdWindowListenerMap = new Map<string, Set<MicroEventListener>>()\n  const umdDocumentListenerMap = new Map<string, Set<MicroEventListener>>()\n  let umdIntervalIdMap = new Map<number, timeInfo>()\n  let umdTimeoutIdMap = new Map<number, timeInfo>()\n  let umdOnClickHandler: unknown\n\n  // record event and timer before exec umdMountHook\n  const recordUmdEffect = () => {\n    // record window event\n    eventListenerMap.forEach((listenerList, type) => {\n      if (listenerList.size) {\n        umdWindowListenerMap.set(type, new Set(listenerList))\n      }\n    })\n\n    // record timers\n    if (intervalIdMap.size) {\n      umdIntervalIdMap = new Map(intervalIdMap)\n    }\n\n    if (timeoutIdMap.size) {\n      umdTimeoutIdMap = new Map(timeoutIdMap)\n    }\n\n    // record onclick handler\n    umdOnClickHandler = documentClickListMap.get(appName)\n\n    // record document event\n    const documentAppListenersMap = documentEventListenerMap.get(appName)\n    if (documentAppListenersMap) {\n      documentAppListenersMap.forEach((listenerList, type) => {\n        if (listenerList.size) {\n          umdDocumentListenerMap.set(type, new Set(listenerList))\n        }\n      })\n    }\n  }\n\n  // rebuild event and timer before remount umd app\n  const rebuildUmdEffect = () => {\n    // rebuild window event\n    umdWindowListenerMap.forEach((listenerList, type) => {\n      for (const listener of listenerList) {\n        microAppWindow.addEventListener(type, listener, listener?.__MICRO_APP_MARK_OPTIONS__)\n      }\n    })\n\n    // rebuild timer\n    umdIntervalIdMap.forEach((info: timeInfo) => {\n      microAppWindow.setInterval(info.handler, info.timeout, ...info.args)\n    })\n\n    umdTimeoutIdMap.forEach((info: timeInfo) => {\n      microAppWindow.setTimeout(info.handler, info.timeout, ...info.args)\n    })\n\n    // rebuild onclick event\n    umdOnClickHandler && documentClickListMap.set(appName, umdOnClickHandler)\n\n    // rebuild document event\n    setCurrentAppName(appName)\n    umdDocumentListenerMap.forEach((listenerList, type) => {\n      for (const listener of listenerList) {\n        document.addEventListener(type, listener, listener?.__MICRO_APP_MARK_OPTIONS__)\n      }\n    })\n    setCurrentAppName(null)\n  }\n\n  // release all event listener & interval & timeout when unmount app\n  const releaseEffect = () => {\n    // Clear window binding events\n    if (eventListenerMap.size) {\n      eventListenerMap.forEach((listenerList, type) => {\n        for (const listener of listenerList) {\n          rawWindowRemoveEventListener.call(rawWindow, type, listener)\n        }\n      })\n      eventListenerMap.clear()\n    }\n\n    // Clear timers\n    if (intervalIdMap.size) {\n      intervalIdMap.forEach((_, intervalId: number) => {\n        rawClearInterval.call(rawWindow, intervalId)\n      })\n      intervalIdMap.clear()\n    }\n\n    if (timeoutIdMap.size) {\n      timeoutIdMap.forEach((_, timeoutId: number) => {\n        rawClearTimeout.call(rawWindow, timeoutId)\n      })\n      timeoutIdMap.clear()\n    }\n\n    // Clear the function bound by micro application through document.onclick\n    documentClickListMap.delete(appName)\n\n    // Clear document binding event\n    const documentAppListenersMap = documentEventListenerMap.get(appName)\n    if (documentAppListenersMap) {\n      documentAppListenersMap.forEach((listenerList, type) => {\n        for (const listener of listenerList) {\n          rawDocumentRemoveEventListener.call(rawDocument, type, listener)\n        }\n      })\n      documentAppListenersMap.clear()\n    }\n  }\n\n  return {\n    recordUmdEffect,\n    rebuildUmdEffect,\n    releaseEffect,\n  }\n}\n","import type { microAppWindowType, SandBoxInterface, plugins } from '@micro-app/types'\nimport {\n  EventCenterForMicroApp, rebuildDataCenterSnapshot, recordDataCenterSnapshot\n} from '../interact'\nimport globalEnv from '../libs/global_env'\nimport {\n  getEffectivePath,\n  isArray,\n  isPlainObject,\n  isString,\n  removeDomScope,\n  unique,\n  throttleDeferForSetAppName,\n  rawDefineProperty,\n  rawDefineProperties,\n  isFunction,\n  rawHasOwnProperty,\n  pureCreateElement,\n} from '../libs/utils'\nimport microApp from '../micro_app'\nimport bindFunctionToRawWindow from './bind_function'\nimport effect, {\n  effectDocumentEvent,\n  releaseEffectDocumentEvent,\n} from './effect'\nimport {\n  patchElementPrototypeMethods,\n  releasePatches,\n} from '../source/patch'\n\nexport type MicroAppWindowDataType = {\n  __MICRO_APP_ENVIRONMENT__: boolean\n  __MICRO_APP_NAME__: string\n  __MICRO_APP_PUBLIC_PATH__: string\n  __MICRO_APP_BASE_URL__: string\n  __MICRO_APP_BASE_ROUTE__: string\n  __MICRO_APP_UMD_MODE__: boolean\n  microApp: EventCenterForMicroApp\n  rawWindow: Window\n  rawDocument: Document\n  removeDomScope: () => void\n}\n\nexport type MicroAppWindowType = Window & MicroAppWindowDataType\n\n// Variables that can escape to rawWindow\nconst staticEscapeProperties: PropertyKey[] = [\n  'System',\n  '__cjsWrapper',\n]\n\n// Variables that can only assigned to rawWindow\nconst escapeSetterKeyList: PropertyKey[] = [\n  'location',\n]\n\nconst globalPropertyList: Array<PropertyKey> = ['window', 'self', 'globalThis']\n\nexport default class SandBox implements SandBoxInterface {\n  static activeCount = 0 // number of active sandbox\n  private recordUmdEffect!: CallableFunction\n  private rebuildUmdEffect!: CallableFunction\n  private releaseEffect!: CallableFunction\n  /**\n   * Scoped global Properties(Properties that can only get and set in microAppWindow, will not escape to rawWindow)\n   * https://github.com/micro-zoe/micro-app/issues/234\n   */\n  private scopeProperties: PropertyKey[] = ['webpackJsonp', 'Vue']\n  // Properties that can be escape to rawWindow\n  private escapeProperties: PropertyKey[] = []\n  // Properties newly added to microAppWindow\n  private injectedKeys = new Set<PropertyKey>()\n  // Properties escape to rawWindow, cleared when unmount\n  private escapeKeys = new Set<PropertyKey>()\n  // record injected values before the first execution of umdHookMount and rebuild before remount umd app\n  private recordUmdInjectedValues?: Map<PropertyKey, unknown>\n  // sandbox state\n  private active = false\n  proxyWindow: WindowProxy // Proxy\n  microAppWindow = {} as MicroAppWindowType // Proxy target\n\n  constructor (appName: string, url: string) {\n    // get scopeProperties and escapeProperties from plugins\n    this.getSpecialProperties(appName)\n    // create proxyWindow with Proxy(microAppWindow)\n    this.proxyWindow = this.createProxyWindow(appName)\n    // inject global properties\n    this.initMicroAppWindow(this.microAppWindow, appName, url)\n    // Rewrite global event listener & timeout\n    Object.assign(this, effect(this.microAppWindow))\n  }\n\n  start (baseRoute: string): void {\n    if (!this.active) {\n      this.active = true\n      this.microAppWindow.__MICRO_APP_BASE_ROUTE__ = this.microAppWindow.__MICRO_APP_BASE_URL__ = baseRoute\n      // BUG FIX: bable-polyfill@6.x\n      globalEnv.rawWindow._babelPolyfill && (globalEnv.rawWindow._babelPolyfill = false)\n      if (++SandBox.activeCount === 1) {\n        effectDocumentEvent()\n        patchElementPrototypeMethods()\n      }\n    }\n  }\n\n  stop (umdMode: boolean): void {\n    if (this.active) {\n      this.active = false\n      this.releaseEffect()\n      this.microAppWindow.microApp.clearDataListener()\n      this.microAppWindow.microApp.clearGlobalDataListener()\n\n      if (!umdMode) {\n        this.injectedKeys.forEach((key: PropertyKey) => {\n          Reflect.deleteProperty(this.microAppWindow, key)\n        })\n        this.injectedKeys.clear()\n\n        this.escapeKeys.forEach((key: PropertyKey) => {\n          Reflect.deleteProperty(globalEnv.rawWindow, key)\n        })\n        this.escapeKeys.clear()\n      }\n\n      if (--SandBox.activeCount === 0) {\n        releaseEffectDocumentEvent()\n        releasePatches()\n      }\n    }\n  }\n\n  // record umd snapshot before the first execution of umdHookMount\n  recordUmdSnapshot (): void {\n    this.microAppWindow.__MICRO_APP_UMD_MODE__ = true\n    this.recordUmdEffect()\n    recordDataCenterSnapshot(this.microAppWindow.microApp)\n\n    this.recordUmdInjectedValues = new Map<PropertyKey, unknown>()\n    this.injectedKeys.forEach((key: PropertyKey) => {\n      this.recordUmdInjectedValues!.set(key, Reflect.get(this.microAppWindow, key))\n    })\n  }\n\n  // rebuild umd snapshot before remount umd app\n  rebuildUmdSnapshot (): void {\n    this.recordUmdInjectedValues!.forEach((value: unknown, key: PropertyKey) => {\n      Reflect.set(this.proxyWindow, key, value)\n    })\n    this.rebuildUmdEffect()\n    rebuildDataCenterSnapshot(this.microAppWindow.microApp)\n  }\n\n  /**\n   * get scopeProperties and escapeProperties from plugins\n   * @param appName app name\n   */\n  private getSpecialProperties (appName: string): void {\n    if (!isPlainObject(microApp.plugins)) return\n\n    this.commonActionForSpecialProperties(microApp.plugins!.global)\n    this.commonActionForSpecialProperties(microApp.plugins!.modules?.[appName])\n  }\n\n  // common action for global plugins and module plugins\n  private commonActionForSpecialProperties (plugins: plugins['global']) {\n    if (isArray(plugins)) {\n      for (const plugin of plugins) {\n        if (isPlainObject(plugin)) {\n          if (isArray(plugin.scopeProperties)) {\n            this.scopeProperties = this.scopeProperties.concat(plugin.scopeProperties!)\n          }\n          if (isArray(plugin.escapeProperties)) {\n            this.escapeProperties = this.escapeProperties.concat(plugin.escapeProperties!)\n          }\n        }\n      }\n    }\n  }\n\n  // create proxyWindow with Proxy(microAppWindow)\n  private createProxyWindow (appName: string) {\n    const rawWindow = globalEnv.rawWindow\n    const descriptorTargetMap = new Map<PropertyKey, 'target' | 'rawWindow'>()\n    // window.xxx will trigger proxy\n    return new Proxy(this.microAppWindow, {\n      get: (target: microAppWindowType, key: PropertyKey): unknown => {\n        throttleDeferForSetAppName(appName)\n\n        if (\n          Reflect.has(target, key) ||\n          (isString(key) && /^__MICRO_APP_/.test(key)) ||\n          this.scopeProperties.includes(key)\n        ) return Reflect.get(target, key)\n\n        const rawValue = Reflect.get(rawWindow, key)\n\n        return isFunction(rawValue) ? bindFunctionToRawWindow(rawWindow, rawValue) : rawValue\n      },\n      set: (target: microAppWindowType, key: PropertyKey, value: unknown): boolean => {\n        if (this.active) {\n          if (escapeSetterKeyList.includes(key)) {\n            Reflect.set(rawWindow, key, value)\n          } else if (\n            // target.hasOwnProperty has been rewritten\n            !rawHasOwnProperty.call(target, key) &&\n            rawHasOwnProperty.call(rawWindow, key) &&\n            !this.scopeProperties.includes(key)\n          ) {\n            const descriptor = Object.getOwnPropertyDescriptor(rawWindow, key)\n            const { configurable, enumerable, writable, set } = descriptor!\n            // set value because it can be set\n            rawDefineProperty(target, key, {\n              value,\n              configurable,\n              enumerable,\n              writable: writable ?? !!set,\n            })\n\n            this.injectedKeys.add(key)\n          } else {\n            Reflect.set(target, key, value)\n            this.injectedKeys.add(key)\n          }\n\n          if (\n            (\n              this.escapeProperties.includes(key) ||\n              (staticEscapeProperties.includes(key) && !Reflect.has(rawWindow, key))\n            ) &&\n            !this.scopeProperties.includes(key)\n          ) {\n            Reflect.set(rawWindow, key, value)\n            this.escapeKeys.add(key)\n          }\n        }\n\n        return true\n      },\n      has: (target: microAppWindowType, key: PropertyKey): boolean => {\n        if (this.scopeProperties.includes(key)) return key in target\n        return key in target || key in rawWindow\n      },\n      // Object.getOwnPropertyDescriptor(window, key)\n      getOwnPropertyDescriptor: (target: microAppWindowType, key: PropertyKey): PropertyDescriptor|undefined => {\n        if (rawHasOwnProperty.call(target, key)) {\n          descriptorTargetMap.set(key, 'target')\n          return Object.getOwnPropertyDescriptor(target, key)\n        }\n\n        if (rawHasOwnProperty.call(rawWindow, key)) {\n          descriptorTargetMap.set(key, 'rawWindow')\n          const descriptor = Object.getOwnPropertyDescriptor(rawWindow, key)\n          if (descriptor && !descriptor.configurable) {\n            descriptor.configurable = true\n          }\n          return descriptor\n        }\n\n        return undefined\n      },\n      // Object.defineProperty(window, key, Descriptor)\n      defineProperty: (target: microAppWindowType, key: PropertyKey, value: PropertyDescriptor): boolean => {\n        const from = descriptorTargetMap.get(key)\n        if (from === 'rawWindow') {\n          return Reflect.defineProperty(rawWindow, key, value)\n        }\n        return Reflect.defineProperty(target, key, value)\n      },\n      // Object.getOwnPropertyNames(window)\n      ownKeys: (target: microAppWindowType): Array<string | symbol> => {\n        return unique(Reflect.ownKeys(rawWindow).concat(Reflect.ownKeys(target)))\n      },\n      deleteProperty: (target: microAppWindowType, key: PropertyKey): boolean => {\n        if (rawHasOwnProperty.call(target, key)) {\n          this.injectedKeys.has(key) && this.injectedKeys.delete(key)\n          this.escapeKeys.has(key) && Reflect.deleteProperty(rawWindow, key)\n          return Reflect.deleteProperty(target, key)\n        }\n        return true\n      },\n    })\n  }\n\n  /**\n   * inject global properties to microAppWindow\n   * @param microAppWindow micro window\n   * @param appName app name\n   * @param url app url\n   */\n  private initMicroAppWindow (microAppWindow: microAppWindowType, appName: string, url: string): void {\n    microAppWindow.__MICRO_APP_ENVIRONMENT__ = true\n    microAppWindow.__MICRO_APP_NAME__ = appName\n    microAppWindow.__MICRO_APP_PUBLIC_PATH__ = getEffectivePath(url)\n    microAppWindow.__MICRO_APP_WINDOW__ = microAppWindow\n    microAppWindow.microApp = Object.assign(new EventCenterForMicroApp(appName), {\n      removeDomScope,\n      pureCreateElement,\n    })\n    microAppWindow.rawWindow = globalEnv.rawWindow\n    microAppWindow.rawDocument = globalEnv.rawDocument\n    microAppWindow.hasOwnProperty = (key: PropertyKey) => rawHasOwnProperty.call(microAppWindow, key) || rawHasOwnProperty.call(globalEnv.rawWindow, key)\n    this.setMappingPropertiesWithRawDescriptor(microAppWindow)\n    this.setHijackProperties(microAppWindow, appName)\n  }\n\n  // properties associated with the native window\n  private setMappingPropertiesWithRawDescriptor (microAppWindow: microAppWindowType): void {\n    let topValue: Window, parentValue: Window\n    const rawWindow = globalEnv.rawWindow\n    if (rawWindow === rawWindow.parent) { // not in iframe\n      topValue = parentValue = this.proxyWindow\n    } else { // in iframe\n      topValue = rawWindow.top\n      parentValue = rawWindow.parent\n    }\n\n    rawDefineProperty(\n      microAppWindow,\n      'top',\n      this.createDescriptorForMicroAppWindow('top', topValue)\n    )\n\n    rawDefineProperty(\n      microAppWindow,\n      'parent',\n      this.createDescriptorForMicroAppWindow('parent', parentValue)\n    )\n\n    globalPropertyList.forEach((key: PropertyKey) => {\n      rawDefineProperty(\n        microAppWindow,\n        key,\n        this.createDescriptorForMicroAppWindow(key, this.proxyWindow)\n      )\n    })\n  }\n\n  private createDescriptorForMicroAppWindow (key: PropertyKey, value: unknown): PropertyDescriptor {\n    const { configurable = true, enumerable = true, writable, set } = Object.getOwnPropertyDescriptor(globalEnv.rawWindow, key) || { writable: true }\n    const descriptor: PropertyDescriptor = {\n      value,\n      configurable,\n      enumerable,\n      writable: writable ?? !!set\n    }\n\n    return descriptor\n  }\n\n  // set hijack Properties to microAppWindow\n  private setHijackProperties (microAppWindow: microAppWindowType, appName: string): void {\n    let modifiedEval: unknown, modifiedImage: unknown\n    rawDefineProperties(microAppWindow, {\n      document: {\n        get () {\n          throttleDeferForSetAppName(appName)\n          return globalEnv.rawDocument\n        },\n        configurable: false,\n        enumerable: true,\n      },\n      eval: {\n        get () {\n          throttleDeferForSetAppName(appName)\n          return modifiedEval || eval\n        },\n        set: (value) => {\n          modifiedEval = value\n        },\n        configurable: true,\n        enumerable: false,\n      },\n      Image: {\n        get () {\n          throttleDeferForSetAppName(appName)\n          return modifiedImage || globalEnv.ImageProxy\n        },\n        set: (value) => {\n          modifiedImage = value\n        },\n        configurable: true,\n        enumerable: false,\n      },\n    })\n  }\n}\n","import microApp from '../micro_app'\nimport { logError, isFunction, removeDomScope, getRootContainer } from '../libs/utils'\n\nfunction formatEventInfo (event: CustomEvent, element: HTMLElement): void {\n  Object.defineProperties(event, {\n    currentTarget: {\n      get () {\n        return element\n      }\n    },\n    target: {\n      get () {\n        return element\n      }\n    },\n  })\n}\n\n/**\n * dispatch lifeCycles event to base app\n * created, beforemount, mounted, unmount, error\n * @param element container\n * @param appName app.name\n * @param lifecycleName lifeCycle name\n * @param error param from error hook\n */\nexport default function dispatchLifecyclesEvent (\n  element: HTMLElement | ShadowRoot,\n  appName: string,\n  lifecycleName: string,\n  error?: Error,\n): void {\n  if (!element) {\n    return logError(`element does not exist in lifecycle ${lifecycleName}`, appName)\n  }\n\n  element = getRootContainer(element)\n\n  // clear dom scope before dispatch lifeCycles event to base app, especially mounted & unmount\n  removeDomScope()\n\n  const detail = Object.assign({\n    name: appName,\n    container: element,\n  }, error && {\n    error\n  })\n\n  const event = new CustomEvent(lifecycleName, {\n    detail,\n  })\n\n  formatEventInfo(event, element)\n  // global hooks\n  // @ts-ignore\n  if (isFunction(microApp.lifeCycles?.[lifecycleName])) {\n    // @ts-ignore\n    microApp.lifeCycles[lifecycleName](event)\n  }\n\n  element.dispatchEvent(event)\n}\n\n/**\n * Dispatch custom event to micro app\n * @param eventName event name\n * @param appName app name\n * @param detail event detail\n */\nexport function dispatchCustomEventToMicroApp (\n  eventName: string,\n  appName: string,\n  detail: Record<string, any> = {},\n): void {\n  const event = new CustomEvent(`${eventName}-${appName}`, {\n    detail,\n  })\n  window.dispatchEvent(event)\n}\n","import type {\n  AppInterface,\n  sourceType,\n  SandBoxInterface,\n  sourceLinkInfo,\n  sourceScriptInfo,\n  Func,\n} from '@micro-app/types'\nimport { HTMLLoader } from './source/loader/html'\nimport { extractSourceDom } from './source/index'\nimport { execScripts } from './source/scripts'\nimport { appStates, lifeCycles, keepAliveStates } from './constants'\nimport SandBox from './sandbox'\nimport {\n  isFunction,\n  cloneContainer,\n  isBoolean,\n  isPromise,\n  logError,\n  getRootContainer,\n} from './libs/utils'\nimport dispatchLifecyclesEvent, { dispatchCustomEventToMicroApp } from './interact/lifecycles_event'\nimport globalEnv from './libs/global_env'\nimport { releasePatchSetAttribute } from './source/patch'\nimport { getActiveApps } from './micro_app'\n\n// micro app instances\nexport const appInstanceMap = new Map<string, AppInterface>()\n\n// params of CreateApp\nexport interface CreateAppParam {\n  name: string\n  url: string\n  ssrUrl?: string\n  scopecss: boolean\n  useSandbox: boolean\n  inline?: boolean\n  baseroute?: string\n  container?: HTMLElement | ShadowRoot\n}\n\nexport default class CreateApp implements AppInterface {\n  private state: string = appStates.NOT_LOADED\n  private keepAliveState: string | null = null\n  private keepAliveContainer: HTMLElement | null = null\n  private loadSourceLevel: -1|0|1|2 = 0\n  private umdHookMount: Func | null = null\n  private umdHookUnmount: Func | null = null\n  private libraryName: string | null = null\n  umdMode = false\n  isPrefetch = false\n  prefetchResolve: (() => void) | null = null\n  name: string\n  url: string\n  ssrUrl: string\n  container: HTMLElement | ShadowRoot | null = null\n  inline: boolean\n  scopecss: boolean\n  useSandbox: boolean\n  baseroute = ''\n  source: sourceType\n  sandBox: SandBoxInterface | null = null\n\n  constructor ({\n    name,\n    url,\n    ssrUrl,\n    container,\n    inline,\n    scopecss,\n    useSandbox,\n    baseroute,\n  }: CreateAppParam) {\n    this.container = container ?? null\n    this.inline = inline ?? false\n    this.baseroute = baseroute ?? ''\n    this.ssrUrl = ssrUrl ?? ''\n    // optional during init👆\n    this.name = name\n    this.url = url\n    this.useSandbox = useSandbox\n    this.scopecss = this.useSandbox && scopecss\n    this.source = {\n      links: new Map<string, sourceLinkInfo>(),\n      scripts: new Map<string, sourceScriptInfo>(),\n    }\n    this.loadSourceCode()\n    this.useSandbox && (this.sandBox = new SandBox(name, url))\n  }\n\n  // Load resources\n  loadSourceCode (): void {\n    this.state = appStates.LOADING_SOURCE_CODE\n    HTMLLoader.getInstance().run(this, extractSourceDom)\n  }\n\n  /**\n   * When resource is loaded, mount app if it is not prefetch or unmount\n   */\n  onLoad (html: HTMLElement): void {\n    if (++this.loadSourceLevel === 2) {\n      this.source.html = html\n\n      if (this.isPrefetch) {\n        this.prefetchResolve?.()\n        this.prefetchResolve = null\n      } else if (appStates.UNMOUNT !== this.state) {\n        this.state = appStates.LOAD_SOURCE_FINISHED\n        this.mount()\n      }\n    }\n  }\n\n  /**\n   * Error loading HTML\n   * @param e Error\n   */\n  onLoadError (e: Error): void {\n    this.loadSourceLevel = -1\n    if (this.prefetchResolve) {\n      this.prefetchResolve()\n      this.prefetchResolve = null\n    }\n\n    if (appStates.UNMOUNT !== this.state) {\n      this.onerror(e)\n      this.state = appStates.LOAD_SOURCE_ERROR\n    }\n  }\n\n  /**\n   * mount app\n   * @param container app container\n   * @param inline js runs in inline mode\n   * @param baseroute route prefix, default is ''\n   */\n  mount (\n    container?: HTMLElement | ShadowRoot,\n    inline?: boolean,\n    baseroute?: string,\n  ): void {\n    if (isBoolean(inline) && inline !== this.inline) {\n      this.inline = inline\n    }\n\n    this.container = this.container ?? container!\n    this.baseroute = baseroute ?? this.baseroute\n\n    if (this.loadSourceLevel !== 2) {\n      this.state = appStates.LOADING_SOURCE_CODE\n      return\n    }\n\n    dispatchLifecyclesEvent(\n      this.container,\n      this.name,\n      lifeCycles.BEFOREMOUNT,\n    )\n\n    this.state = appStates.MOUNTING\n\n    cloneContainer(this.source.html as Element, this.container as Element, !this.umdMode)\n\n    this.sandBox?.start(this.baseroute)\n\n    let umdHookMountResult: any // result of mount function\n\n    if (!this.umdMode) {\n      let hasDispatchMountedEvent = false\n      // if all js are executed, param isFinished will be true\n      execScripts(this.source.scripts, this, (isFinished: boolean) => {\n        if (!this.umdMode) {\n          const { mount, unmount } = this.getUmdLibraryHooks()\n          // if mount & unmount is function, the sub app is umd mode\n          if (isFunction(mount) && isFunction(unmount)) {\n            this.umdHookMount = mount as Func\n            this.umdHookUnmount = unmount as Func\n            this.umdMode = true\n            this.sandBox?.recordUmdSnapshot()\n            try {\n              umdHookMountResult = this.umdHookMount()\n            } catch (e) {\n              logError('an error occurred in the mount function \\n', this.name, e)\n            }\n          }\n        }\n\n        if (!hasDispatchMountedEvent && (isFinished === true || this.umdMode)) {\n          hasDispatchMountedEvent = true\n          this.handleMounted(umdHookMountResult)\n        }\n      })\n    } else {\n      this.sandBox?.rebuildUmdSnapshot()\n      try {\n        umdHookMountResult = this.umdHookMount!()\n      } catch (e) {\n        logError('an error occurred in the mount function \\n', this.name, e)\n      }\n      this.handleMounted(umdHookMountResult)\n    }\n  }\n\n  /**\n   * handle for promise umdHookMount\n   * @param umdHookMountResult result of umdHookMount\n   */\n  private handleMounted (umdHookMountResult: any): void {\n    if (isPromise(umdHookMountResult)) {\n      umdHookMountResult\n        .then(() => this.dispatchMountedEvent())\n        .catch((e: Error) => this.onerror(e))\n    } else {\n      this.dispatchMountedEvent()\n    }\n  }\n\n  /**\n   * dispatch mounted event when app run finished\n   */\n  private dispatchMountedEvent (): void {\n    if (appStates.UNMOUNT !== this.state) {\n      this.state = appStates.MOUNTED\n      dispatchLifecyclesEvent(\n        this.container!,\n        this.name,\n        lifeCycles.MOUNTED,\n      )\n    }\n  }\n\n  /**\n   * unmount app\n   * @param destroy completely destroy, delete cache resources\n   * @param unmountcb callback of unmount\n   */\n  unmount (destroy: boolean, unmountcb?: CallableFunction): void {\n    if (this.state === appStates.LOAD_SOURCE_ERROR) {\n      destroy = true\n    }\n\n    this.state = appStates.UNMOUNT\n    this.keepAliveState = null\n    this.keepAliveContainer = null\n\n    // result of unmount function\n    let umdHookUnmountResult: any\n    /**\n     * send an unmount event to the micro app or call umd unmount hook\n     * before the sandbox is cleared\n     */\n    if (this.umdHookUnmount) {\n      try {\n        umdHookUnmountResult = this.umdHookUnmount()\n      } catch (e) {\n        logError('an error occurred in the unmount function \\n', this.name, e)\n      }\n    }\n\n    // dispatch unmount event to micro app\n    dispatchCustomEventToMicroApp('unmount', this.name)\n\n    this.handleUnmounted(destroy, umdHookUnmountResult, unmountcb)\n  }\n\n  /**\n   * handle for promise umdHookUnmount\n   * @param destroy completely destroy, delete cache resources\n   * @param umdHookUnmountResult result of umdHookUnmount\n   * @param unmountcb callback of unmount\n   */\n  private handleUnmounted (\n    destroy: boolean,\n    umdHookUnmountResult: any,\n    unmountcb?: CallableFunction,\n  ): void {\n    if (isPromise(umdHookUnmountResult)) {\n      umdHookUnmountResult\n        .then(() => this.actionsForUnmount(destroy, unmountcb))\n        .catch(() => this.actionsForUnmount(destroy, unmountcb))\n    } else {\n      this.actionsForUnmount(destroy, unmountcb)\n    }\n  }\n\n  /**\n   * actions for unmount app\n   * @param destroy completely destroy, delete cache resources\n   * @param unmountcb callback of unmount\n   */\n  private actionsForUnmount (destroy: boolean, unmountcb?: CallableFunction): void {\n    if (destroy) {\n      this.actionsForCompletelyDestroy()\n    } else if (this.umdMode && (this.container as Element).childElementCount) {\n      cloneContainer(this.container as Element, this.source.html as Element, false)\n    }\n\n    // this.container maybe contains micro-app element, stop sandbox should exec after cloneContainer\n    this.sandBox?.stop(this.umdMode)\n    if (!getActiveApps().length) {\n      releasePatchSetAttribute()\n    }\n\n    // dispatch unmount event to base app\n    dispatchLifecyclesEvent(\n      this.container!,\n      this.name,\n      lifeCycles.UNMOUNT,\n    )\n\n    this.container!.innerHTML = ''\n    this.container = null\n\n    unmountcb && unmountcb()\n  }\n\n  // actions for completely destroy\n  actionsForCompletelyDestroy (): void {\n    if (!this.useSandbox && this.umdMode) {\n      delete window[this.libraryName as any]\n    }\n    appInstanceMap.delete(this.name)\n  }\n\n  // hidden app when disconnectedCallback called with keep-alive\n  hiddenKeepAliveApp (): void {\n    const oldContainer = this.container\n\n    cloneContainer(\n      this.container as Element,\n      this.keepAliveContainer ? this.keepAliveContainer : (this.keepAliveContainer = document.createElement('div')),\n      false,\n    )\n\n    this.container = this.keepAliveContainer\n\n    this.keepAliveState = keepAliveStates.KEEP_ALIVE_HIDDEN\n\n    // event should dispatch before clone node\n    // dispatch afterhidden event to micro-app\n    dispatchCustomEventToMicroApp('appstate-change', this.name, {\n      appState: 'afterhidden',\n    })\n\n    // dispatch afterhidden event to base app\n    dispatchLifecyclesEvent(\n      oldContainer!,\n      this.name,\n      lifeCycles.AFTERHIDDEN,\n    )\n  }\n\n  // show app when connectedCallback called with keep-alive\n  showKeepAliveApp (container: HTMLElement | ShadowRoot): void {\n    // dispatch beforeshow event to micro-app\n    dispatchCustomEventToMicroApp('appstate-change', this.name, {\n      appState: 'beforeshow',\n    })\n\n    // dispatch beforeshow event to base app\n    dispatchLifecyclesEvent(\n      container,\n      this.name,\n      lifeCycles.BEFORESHOW,\n    )\n\n    cloneContainer(\n      this.container as Element,\n      container as Element,\n      false,\n    )\n\n    this.container = container\n\n    this.keepAliveState = keepAliveStates.KEEP_ALIVE_SHOW\n\n    // dispatch aftershow event to micro-app\n    dispatchCustomEventToMicroApp('appstate-change', this.name, {\n      appState: 'aftershow',\n    })\n\n    // dispatch aftershow event to base app\n    dispatchLifecyclesEvent(\n      this.container,\n      this.name,\n      lifeCycles.AFTERSHOW,\n    )\n  }\n\n  /**\n   * app rendering error\n   * @param e Error\n   */\n  onerror (e: Error): void {\n    dispatchLifecyclesEvent(\n      this.container!,\n      this.name,\n      lifeCycles.ERROR,\n      e,\n    )\n  }\n\n  // get app state\n  getAppState (): string {\n    return this.state\n  }\n\n  // get keep-alive state\n  getKeepAliveState (): string | null {\n    return this.keepAliveState\n  }\n\n  // get umd library, if it not exist, return empty object\n  private getUmdLibraryHooks (): Record<string, unknown> {\n    // after execScripts, the app maybe unmounted\n    if (appStates.UNMOUNT !== this.state) {\n      const global = (this.sandBox?.proxyWindow ?? globalEnv.rawWindow) as any\n      this.libraryName = getRootContainer(this.container!).getAttribute('library') || `micro-app-${this.name}`\n      // do not use isObject\n      return typeof global[this.libraryName] === 'object' ? global[this.libraryName] : {}\n    }\n\n    return {}\n  }\n}\n","import type { AttrType, MicroAppElementType, AppInterface } from '@micro-app/types'\nimport {\n  defer,\n  formatAppName,\n  formatAppURL,\n  version,\n  logError,\n  logWarn,\n  isString,\n  isFunction,\n  CompletionPath,\n} from './libs/utils'\nimport {\n  ObservedAttrName,\n  appStates,\n  lifeCycles,\n  keepAliveStates,\n} from './constants'\nimport CreateApp, { appInstanceMap } from './create_app'\nimport { patchSetAttribute } from './source/patch'\nimport microApp from './micro_app'\nimport dispatchLifecyclesEvent from './interact/lifecycles_event'\nimport globalEnv from './libs/global_env'\n\n/**\n * define element\n * @param tagName element name\n */\nexport function defineElement (tagName: string): void {\n  class MicroAppElement extends HTMLElement implements MicroAppElementType {\n    static get observedAttributes (): string[] {\n      return ['name', 'url']\n    }\n\n    constructor () {\n      super()\n      patchSetAttribute()\n    }\n\n    private isWaiting = false\n    private cacheData: Record<PropertyKey, unknown> | null = null\n    private hasConnected = false\n    appName = '' // app name\n    appUrl = '' // app url\n    ssrUrl = '' // html path in ssr mode\n    version = version\n\n    // 👇 Configuration\n    // name: app name\n    // url: html address\n    // shadowDom: use shadowDOM, default is false\n    // destroy: whether delete cache resources when unmount, default is false\n    // inline: whether js runs in inline script mode, default is false\n    // disableScopecss: whether disable css scoped, default is false\n    // disableSandbox: whether disable sandbox, default is false\n    // baseRoute: route prefix, default is ''\n    // keep-alive: open keep-alive mode\n\n    connectedCallback (): void {\n      this.hasConnected = true\n\n      defer(() => dispatchLifecyclesEvent(\n        this,\n        this.appName,\n        lifeCycles.CREATED,\n      ))\n\n      this.initialMount()\n    }\n\n    disconnectedCallback (): void {\n      this.hasConnected = false\n      // keep-alive\n      if (this.getKeepAliveModeResult()) {\n        this.handleHiddenKeepAliveApp()\n      } else {\n        this.handleUnmount(this.getDestroyCompatibleResult())\n      }\n    }\n\n    attributeChangedCallback (attr: ObservedAttrName, _oldVal: string, newVal: string): void {\n      if (\n        this.legalAttribute(attr, newVal) &&\n        this[attr === ObservedAttrName.NAME ? 'appName' : 'appUrl'] !== newVal\n      ) {\n        if (attr === ObservedAttrName.URL && !this.appUrl) {\n          newVal = formatAppURL(newVal, this.appName)\n          if (!newVal) {\n            return logError(`Invalid attribute url ${newVal}`, this.appName)\n          }\n          this.appUrl = newVal\n          this.handleInitialNameAndUrl()\n        } else if (attr === ObservedAttrName.NAME && !this.appName) {\n          const formatNewName = formatAppName(newVal)\n\n          if (!formatNewName) {\n            return logError(`Invalid attribute name ${newVal}`, this.appName)\n          }\n\n          if (this.cacheData) {\n            microApp.setData(formatNewName, this.cacheData)\n            this.cacheData = null\n          }\n\n          this.appName = formatNewName\n          if (formatNewName !== newVal) {\n            this.setAttribute('name', this.appName)\n          }\n          this.handleInitialNameAndUrl()\n        } else if (!this.isWaiting) {\n          this.isWaiting = true\n          defer(this.handleAttributeUpdate)\n        }\n      }\n    }\n\n    // handle for connectedCallback run before attributeChangedCallback\n    private handleInitialNameAndUrl (): void {\n      this.hasConnected && this.initialMount()\n    }\n\n    /**\n     * first mount of this app\n     */\n    private initialMount (): void {\n      if (!this.appName || !this.appUrl) return\n\n      if (this.getDisposeResult('shadowDOM') && !this.shadowRoot && isFunction(this.attachShadow)) {\n        this.attachShadow({ mode: 'open' })\n      }\n\n      if (this.getDisposeResult('ssr')) {\n        this.ssrUrl = CompletionPath(globalEnv.rawWindow.location.pathname, this.appUrl)\n      } else if (this.ssrUrl) {\n        this.ssrUrl = ''\n      }\n\n      if (appInstanceMap.has(this.appName)) {\n        const app = appInstanceMap.get(this.appName)!\n        const existAppUrl = app.ssrUrl || app.url\n        const activeAppUrl = this.ssrUrl || this.appUrl\n        // keep-alive don't care about ssrUrl\n        // Even if the keep-alive app is pushed into the background, it is still active and cannot be replaced. Otherwise, it is difficult for developers to troubleshoot in case of conflict and  will leave developers at a loss\n        if (\n          app.getKeepAliveState() === keepAliveStates.KEEP_ALIVE_HIDDEN &&\n          app.url === this.appUrl\n        ) {\n          this.handleShowKeepAliveApp(app)\n        } else if (\n          existAppUrl === activeAppUrl && (\n            app.isPrefetch ||\n            app.getAppState() === appStates.UNMOUNT\n          )\n        ) {\n          this.handleAppMount(app)\n        } else if (app.isPrefetch || app.getAppState() === appStates.UNMOUNT) {\n          /**\n           * url is different & old app is unmounted or prefetch, create new app to replace old one\n           */\n          logWarn(`the ${app.isPrefetch ? 'prefetch' : 'unmounted'} app with url: ${existAppUrl} is replaced by a new app`, this.appName)\n          this.handleCreateApp()\n        } else {\n          logError(`app name conflict, an app named ${this.appName} is running`, this.appName)\n        }\n      } else {\n        this.handleCreateApp()\n      }\n    }\n\n    /**\n     * handle for change of name an url after element init\n     */\n    private handleAttributeUpdate = (): void => {\n      this.isWaiting = false\n      const formatAttrName = formatAppName(this.getAttribute('name'))\n      const formatAttrUrl = formatAppURL(this.getAttribute('url'), this.appName)\n      if (this.legalAttribute('name', formatAttrName) && this.legalAttribute('url', formatAttrUrl)) {\n        const existApp = appInstanceMap.get(formatAttrName)\n        if (formatAttrName !== this.appName && existApp) {\n          // handling of cached and non-prefetch apps\n          if (\n            appStates.UNMOUNT !== existApp.getAppState() &&\n            keepAliveStates.KEEP_ALIVE_HIDDEN !== existApp.getKeepAliveState() &&\n            !existApp.isPrefetch\n          ) {\n            this.setAttribute('name', this.appName)\n            return logError(`app name conflict, an app named ${formatAttrName} is running`, this.appName)\n          }\n        }\n\n        if (formatAttrName !== this.appName || formatAttrUrl !== this.appUrl) {\n          if (formatAttrName === this.appName) {\n            this.handleUnmount(true, () => {\n              this.actionsForAttributeChange(formatAttrName, formatAttrUrl, existApp)\n            })\n          } else if (this.getKeepAliveModeResult()) {\n            this.handleHiddenKeepAliveApp()\n            this.actionsForAttributeChange(formatAttrName, formatAttrUrl, existApp)\n          } else {\n            this.handleUnmount(\n              this.getDestroyCompatibleResult(),\n              () => {\n                this.actionsForAttributeChange(formatAttrName, formatAttrUrl, existApp)\n              }\n            )\n          }\n        }\n      } else if (formatAttrName !== this.appName) {\n        this.setAttribute('name', this.appName)\n      }\n    }\n\n    // remount app or create app if attribute url or name change\n    private actionsForAttributeChange (\n      formatAttrName: string,\n      formatAttrUrl: string,\n      existApp: AppInterface | undefined,\n    ): void {\n      /**\n       * change ssrUrl in ssr mode\n       * do not add judgment of formatAttrUrl === this.appUrl\n       */\n      if (this.getDisposeResult('ssr')) {\n        this.ssrUrl = CompletionPath(globalEnv.rawWindow.location.pathname, formatAttrUrl)\n      } else if (this.ssrUrl) {\n        this.ssrUrl = ''\n      }\n\n      this.appName = formatAttrName\n      this.appUrl = formatAttrUrl\n      ;(this.shadowRoot ?? this).innerHTML = ''\n      if (formatAttrName !== this.getAttribute('name')) {\n        this.setAttribute('name', this.appName)\n      }\n\n      /**\n       * when existApp not null: this.appName === existApp.name\n       * scene1: if formatAttrName and this.appName are equal: exitApp is the current app, the url must be different, existApp has been unmounted\n       * scene2: if formatAttrName and this.appName are different: existApp must be prefetch or unmounted, if url is equal, then just mount, if url is different, then create new app to replace existApp\n       * scene3: url is different but ssrUrl is equal\n       * scene4: url is equal but ssrUrl is different, if url is equal, name must different\n       * scene5: if existApp is KEEP_ALIVE_HIDDEN, name must different\n       */\n      if (existApp) {\n        if (existApp.getKeepAliveState() === keepAliveStates.KEEP_ALIVE_HIDDEN) {\n          if (existApp.url === this.appUrl) {\n            this.handleShowKeepAliveApp(existApp)\n          } else {\n            // the hidden keep-alive app is still active\n            logError(`app name conflict, an app named ${this.appName} is running`, this.appName)\n          }\n        } else if (existApp.url === this.appUrl && existApp.ssrUrl === this.ssrUrl) {\n          // mount app\n          this.handleAppMount(existApp)\n        } else {\n          this.handleCreateApp()\n        }\n      } else {\n        this.handleCreateApp()\n      }\n    }\n\n    /**\n     * judge the attribute is legal\n     * @param name attribute name\n     * @param val attribute value\n     */\n    private legalAttribute (name: string, val: AttrType): boolean {\n      if (!isString(val) || !val) {\n        logError(`unexpected attribute ${name}, please check again`, this.appName)\n\n        return false\n      }\n\n      return true\n    }\n\n    /**\n     * mount app\n     * some serious note before mount:\n     * 1. is prefetch ?\n     * 2. is remount in another container ?\n     * 3. is remount with change properties of the container ?\n     */\n    private handleAppMount (app: AppInterface): void {\n      app.isPrefetch = false\n      defer(() => app.mount(\n        this.shadowRoot ?? this,\n        this.getDisposeResult('inline'),\n        this.getBaseRouteCompatible(),\n      ))\n    }\n\n    // create app instance\n    private handleCreateApp (): void {\n      /**\n       * actions for destory old app\n       * fix of unmounted umd app with disableSandbox\n       */\n      if (appInstanceMap.has(this.appName)) {\n        appInstanceMap.get(this.appName)!.actionsForCompletelyDestroy()\n      }\n\n      const instance: AppInterface = new CreateApp({\n        name: this.appName,\n        url: this.appUrl,\n        ssrUrl: this.ssrUrl,\n        container: this.shadowRoot ?? this,\n        inline: this.getDisposeResult('inline'),\n        scopecss: !(this.getDisposeResult('disableScopecss') || this.getDisposeResult('shadowDOM')),\n        useSandbox: !this.getDisposeResult('disableSandbox'),\n        baseroute: this.getBaseRouteCompatible(),\n      })\n\n      appInstanceMap.set(this.appName, instance)\n    }\n\n    /**\n     * unmount app\n     * @param destroy delete cache resources when unmount\n     */\n    private handleUnmount (destroy: boolean, unmountcb?: CallableFunction): void {\n      const app = appInstanceMap.get(this.appName)\n      if (\n        app &&\n        app.getAppState() !== appStates.UNMOUNT\n      ) app.unmount(destroy, unmountcb)\n    }\n\n    // hidden app when disconnectedCallback called with keep-alive\n    private handleHiddenKeepAliveApp () {\n      const app = appInstanceMap.get(this.appName)\n      if (\n        app &&\n        app.getAppState() !== appStates.UNMOUNT &&\n        app.getKeepAliveState() !== keepAliveStates.KEEP_ALIVE_HIDDEN\n      ) app.hiddenKeepAliveApp()\n    }\n\n    // show app when connectedCallback called with keep-alive\n    private handleShowKeepAliveApp (app: AppInterface) {\n      // must be async\n      defer(() => app.showKeepAliveApp(this.shadowRoot ?? this))\n    }\n\n    /**\n     * Get configuration\n     * Global setting is lowest priority\n     * @param name Configuration item name\n     */\n    private getDisposeResult (name: string): boolean {\n      // @ts-ignore\n      return (this.compatibleSpecialProperties(name) || microApp[name]) && this.compatibleDisableSpecialProperties(name)\n    }\n\n    // compatible of disableScopecss & disableSandbox\n    private compatibleSpecialProperties (name: string): boolean {\n      if (name === 'disableScopecss') {\n        return this.hasAttribute('disableScopecss') || this.hasAttribute('disable-scopecss')\n      } else if (name === 'disableSandbox') {\n        return this.hasAttribute('disableSandbox') || this.hasAttribute('disable-sandbox')\n      }\n      return this.hasAttribute(name)\n    }\n\n    // compatible of disableScopecss & disableSandbox\n    private compatibleDisableSpecialProperties (name: string): boolean {\n      if (name === 'disableScopecss') {\n        return this.getAttribute('disableScopecss') !== 'false' && this.getAttribute('disable-scopecss') !== 'false'\n      } else if (name === 'disableSandbox') {\n        return this.getAttribute('disableSandbox') !== 'false' && this.getAttribute('disable-sandbox') !== 'false'\n      }\n      return this.getAttribute(name) !== 'false'\n    }\n\n    /**\n     * 2021-09-08\n     * get baseRoute\n     * getAttribute('baseurl') is compatible writing of versions below 0.3.1\n     */\n    private getBaseRouteCompatible (): string {\n      return this.getAttribute('baseroute') ?? this.getAttribute('baseurl') ?? ''\n    }\n\n    // compatible of destroy\n    private getDestroyCompatibleResult (): boolean {\n      return this.getDisposeResult('destroy') || this.getDisposeResult('destory')\n    }\n\n    /**\n     * destroy has priority over destroy keep-alive\n     */\n    private getKeepAliveModeResult (): boolean {\n      return this.getDisposeResult('keep-alive') && !this.getDestroyCompatibleResult()\n    }\n\n    /**\n     * Data from the base application\n     */\n    set data (value: Record<PropertyKey, unknown> | null) {\n      if (this.appName) {\n        microApp.setData(this.appName, value!)\n      } else {\n        this.cacheData = value\n      }\n    }\n\n    /**\n     * get data only used in jsx-custom-event once\n     */\n    get data (): Record<PropertyKey, unknown> | null {\n      if (this.appName) {\n        return microApp.getData(this.appName, true)\n      } else if (this.cacheData) {\n        return this.cacheData\n      }\n      return null\n    }\n  }\n\n  window.customElements.define(tagName, MicroAppElement)\n}\n","import type { prefetchParamList, prefetchParam, globalAssetsType } from '@micro-app/types'\nimport CreateApp, { appInstanceMap } from './create_app'\nimport {\n  requestIdleCallback,\n  formatAppURL,\n  formatAppName,\n  promiseStream,\n  logError,\n  isBrowser,\n  isArray,\n  isPlainObject,\n  isString,\n  isFunction,\n} from './libs/utils'\nimport { fetchSource } from './source/fetch'\nimport { globalLinks } from './source/links'\nimport { globalScripts } from './source/scripts'\nimport microApp from './micro_app'\n\n/**\n * preFetch([\n *  {\n *    name: string,\n *    url: string,\n *    disableScopecss?: boolean,\n *    disableSandbox?: boolean,\n *  },\n *  ...\n * ])\n * Note:\n *  1: preFetch is asynchronous and is performed only when the browser is idle\n *  2: disableScopecss, disableSandbox must be same with micro-app element, if conflict, the one who executes first shall prevail\n * @param apps micro apps\n */\nexport default function preFetch (apps: prefetchParamList): void {\n  if (!isBrowser) {\n    return logError('preFetch is only supported in browser environment')\n  }\n  requestIdleCallback(() => {\n    isFunction(apps) && (apps = (apps as Function)())\n\n    if (isArray(apps)) {\n      apps.reduce((pre, next) => pre.then(() => preFetchInSerial(next)), Promise.resolve())\n    }\n  })\n}\n\n// sequential preload app\nfunction preFetchInSerial (prefetchApp: prefetchParam): Promise<void> {\n  return new Promise((resolve) => {\n    requestIdleCallback(() => {\n      if (isPlainObject(prefetchApp) && navigator.onLine) {\n        prefetchApp.name = formatAppName(prefetchApp.name)\n        prefetchApp.url = formatAppURL(prefetchApp.url, prefetchApp.name)\n        if (prefetchApp.name && prefetchApp.url && !appInstanceMap.has(prefetchApp.name)) {\n          const app = new CreateApp({\n            name: prefetchApp.name,\n            url: prefetchApp.url,\n            scopecss: !(prefetchApp.disableScopecss ?? microApp.disableScopecss),\n            useSandbox: !(prefetchApp.disableSandbox ?? microApp.disableSandbox),\n          })\n\n          app.isPrefetch = true\n          app.prefetchResolve = resolve\n          appInstanceMap.set(prefetchApp.name, app)\n        } else {\n          resolve()\n        }\n      } else {\n        resolve()\n      }\n    })\n  })\n}\n\n/**\n * load global assets into cache\n * @param assets global assets of js, css\n */\nexport function getGlobalAssets (assets: globalAssetsType): void {\n  if (isPlainObject(assets)) {\n    requestIdleCallback(() => {\n      fetchGlobalResources(assets.js, 'js', globalScripts)\n      fetchGlobalResources(assets.css, 'css', globalLinks)\n    })\n  }\n}\n\n// TODO: requestIdleCallback for every file\nfunction fetchGlobalResources (resources:string[] | undefined, suffix:string, cache:Map<string, string>) {\n  if (isArray(resources)) {\n    const effectiveResource = resources!.filter((path) => isString(path) && path.includes(`.${suffix}`) && !cache.has(path))\n\n    const fetchResourcePromise = effectiveResource.map((path) => fetchSource(path))\n\n    // fetch resource with stream\n    promiseStream<string>(fetchResourcePromise, (res: {data: string, index: number}) => {\n      const path = effectiveResource[res.index]\n      if (!cache.has(path)) {\n        cache.set(path, res.data)\n      }\n    }, (err: {error: Error, index: number}) => {\n      logError(err)\n    })\n  }\n}\n","import type { OptionsType, MicroAppConfigType, lifeCyclesType, plugins, fetchType, AppInterface } from '@micro-app/types'\nimport { defineElement } from './micro_app_element'\nimport preFetch, { getGlobalAssets } from './prefetch'\nimport { logError, logWarn, isFunction, isBrowser, isPlainObject, formatAppName, getRootContainer } from './libs/utils'\nimport { EventCenterForBaseApp } from './interact'\nimport { initGlobalEnv } from './libs/global_env'\nimport { appInstanceMap } from './create_app'\nimport { appStates, keepAliveStates } from './constants'\n\n/**\n * if app not prefetch & not unmount, then app is active\n * @param excludeHiddenApp exclude hidden keep-alive app, default is false\n * @returns active apps\n */\nexport function getActiveApps (excludeHiddenApp?: boolean): string[] {\n  const activeApps: string[] = []\n  appInstanceMap.forEach((app: AppInterface, appName: string) => {\n    if (\n      appStates.UNMOUNT !== app.getAppState() &&\n      !app.isPrefetch &&\n      (\n        !excludeHiddenApp ||\n        keepAliveStates.KEEP_ALIVE_HIDDEN !== app.getKeepAliveState()\n      )\n    ) {\n      activeApps.push(appName)\n    }\n  })\n\n  return activeApps\n}\n\n// get all registered apps\nexport function getAllApps (): string[] {\n  return Array.from(appInstanceMap.keys())\n}\n\nexport interface unmountAppParams {\n  destroy?: boolean // destroy app, default is false\n  clearAliveState?: boolean // clear keep-alive app state, default is false\n}\n\n/**\n * unmount app by appName\n * @param appName\n * @param options unmountAppParams\n * @returns Promise<void>\n */\nexport function unmountApp (appName: string, options?: unmountAppParams): Promise<void> {\n  const app = appInstanceMap.get(formatAppName(appName))\n  return new Promise((resolve) => { // eslint-disable-line\n    if (app) {\n      if (app.getAppState() === appStates.UNMOUNT || app.isPrefetch) {\n        if (options?.destroy) {\n          app.actionsForCompletelyDestroy()\n        }\n        resolve()\n      } else if (app.getKeepAliveState() === keepAliveStates.KEEP_ALIVE_HIDDEN) {\n        if (options?.destroy) {\n          app.unmount(true, resolve)\n        } else if (options?.clearAliveState) {\n          app.unmount(false, resolve)\n        } else {\n          resolve()\n        }\n      } else {\n        const container = getRootContainer(app.container!)\n        const unmountHandler = () => {\n          container.removeEventListener('unmount', unmountHandler)\n          container.removeEventListener('afterhidden', afterhiddenHandler)\n          resolve()\n        }\n\n        const afterhiddenHandler = () => {\n          container.removeEventListener('unmount', unmountHandler)\n          container.removeEventListener('afterhidden', afterhiddenHandler)\n          resolve()\n        }\n\n        container.addEventListener('unmount', unmountHandler)\n        container.addEventListener('afterhidden', afterhiddenHandler)\n\n        if (options?.destroy) {\n          let destroyAttrValue, destoryAttrValue\n          container.hasAttribute('destroy') && (destroyAttrValue = container.getAttribute('destroy'))\n          container.hasAttribute('destory') && (destoryAttrValue = container.getAttribute('destory'))\n\n          container.setAttribute('destroy', 'true')\n          container.parentNode!.removeChild(container)\n          container.removeAttribute('destroy')\n\n          typeof destroyAttrValue === 'string' && container.setAttribute('destroy', destroyAttrValue)\n          typeof destoryAttrValue === 'string' && container.setAttribute('destory', destoryAttrValue)\n        } else if (options?.clearAliveState && container.hasAttribute('keep-alive')) {\n          const keepAliveAttrValue = container.getAttribute('keep-alive')!\n\n          container.removeAttribute('keep-alive')\n          container.parentNode!.removeChild(container)\n\n          container.setAttribute('keep-alive', keepAliveAttrValue)\n        } else {\n          container.parentNode!.removeChild(container)\n        }\n      }\n    } else {\n      logWarn(`app ${appName} does not exist`)\n      resolve()\n    }\n  })\n}\n\n// unmount all apps in turn\nexport function unmountAllApps (options?: unmountAppParams): Promise<void> {\n  return Array.from(appInstanceMap.keys()).reduce((pre, next) => pre.then(() => unmountApp(next, options)), Promise.resolve())\n}\n\nexport class MicroApp extends EventCenterForBaseApp implements MicroAppConfigType {\n  tagName = 'micro-app'\n  shadowDOM?: boolean\n  destroy?: boolean\n  inline?: boolean\n  disableScopecss?: boolean\n  disableSandbox?: boolean\n  ssr?: boolean\n  lifeCycles?: lifeCyclesType\n  plugins?: plugins\n  fetch?: fetchType\n  preFetch = preFetch\n  excludeAssetFilter?: (assetUrl: string) => boolean\n  start (options?: OptionsType): void {\n    if (!isBrowser || !window.customElements) {\n      return logError('micro-app is not supported in this environment')\n    }\n\n    if (options?.tagName) {\n      if (/^micro-app(-\\S+)?/.test(options.tagName)) {\n        this.tagName = options.tagName\n      } else {\n        return logError(`${options.tagName} is invalid tagName`)\n      }\n    }\n\n    if (window.customElements.get(this.tagName)) {\n      return logWarn(`element ${this.tagName} is already defined`)\n    }\n\n    initGlobalEnv()\n\n    if (options && isPlainObject(options)) {\n      this.shadowDOM = options.shadowDOM\n      this.destroy = options.destroy\n      /**\n       * compatible with versions below 0.4.2 of destroy\n       * do not merge with the previous line\n       */\n      // @ts-ignore\n      this.destory = options.destory\n      this.inline = options.inline\n      this.disableScopecss = options.disableScopecss\n      this.disableSandbox = options.disableSandbox\n      this.ssr = options.ssr\n      isFunction(options.fetch) && (this.fetch = options.fetch)\n\n      isPlainObject(options.lifeCycles) && (this.lifeCycles = options.lifeCycles)\n\n      // load app assets when browser is idle\n      options.preFetchApps && preFetch(options.preFetchApps)\n\n      // load global assets when browser is idle\n      options.globalAssets && getGlobalAssets(options.globalAssets)\n\n      isFunction(options.excludeAssetFilter) && (this.excludeAssetFilter = options.excludeAssetFilter)\n\n      if (isPlainObject(options.plugins)) {\n        const modules = options.plugins!.modules\n        if (isPlainObject(modules)) {\n          for (const appName in modules) {\n            const formattedAppName = formatAppName(appName)\n            if (formattedAppName && appName !== formattedAppName) {\n              modules[formattedAppName] = modules[appName]\n              delete modules[appName]\n            }\n          }\n        }\n\n        this.plugins = options.plugins\n      }\n    }\n\n    // define customElement after init\n    defineElement(this.tagName)\n  }\n}\n\nexport default new MicroApp()\n"],"names":["isBrowser","window","globalThis","global","self","Function","isString","target","isBoolean","isFunction","isArray","Array","isPlainObject","toString","call","isPromise","isBoundFunction","name","indexOf","hasOwnProperty","rawDefineProperty","Object","defineProperty","rawDefineProperties","defineProperties","rawHasOwnProperty","prototype","logError","msg","appName","rest","appNameTip","console","error","logWarn","warn","defer","fn","args","Promise","resolve","then","bind","addProtocol","url","startsWith","location","protocol","formatAppURL","origin","pathname","search","URL","test","fullPath","replace","e","formatAppName","getEffectivePath","pathArr","split","pop","join","CompletionPath","path","baseURI","promiseStream","promiseList","successCb","errorCb","finallyCb","finishedNum","isFinished","length","forEach","p","i","res","data","index","catch","err","requestIdleCallback","lastTime","Date","now","setTimeout","didTimeout","timeRemaining","Math","max","currentMicroAppName","setCurrentAppName","throttleDeferForSetAppName","getCurrentAppName","removeDomScope","pureCreateElement","tagName","options","element","document","createElement","__MICRO_APP_NAME__","cloneContainer","deep","innerHTML","clonedNode","cloneNode","fragment","createDocumentFragment","from","childNodes","node","appendChild","isInvalidQuerySelectorKey","key","isUniqueElement","getRootContainer","ShadowRoot","isShadowRoot","host","trim","str","isFireFox","navigator","userAgent","ObservedAttrName","appStates","lifeCycles","keepAliveStates","globalKeyToBeCached","fetchSource","microApp","fetch","text","HTMLLoader","getInstance","this","instance","run","app","htmlUrl","ssrUrl","cache","htmlStr","onerror","Error","formatHTML","onLoadError","processHtml","plugins","match","code","mergedPlugins","push","modules","reduce","preCode","plugin","rootSelectorREG","bodySelectorREG","parseError","linkPath","reason","filename","CSSParser","constructor","createMatcherForAtRuleWithChildRule","createMatcherForNoneBraceAtRule","exec","cssText","prefix","matchRules","decodeURIComponent","result","reset","scopecssDisable","scopecssDisableNextLine","scopecssDisableSelectors","matchLeadingSpaces","matchComments","charAt","matchAtRule","matchStyleRule","selectors","formatSelector","recordResult","styleDeclarations","skip","m","commonMatch","_","separator","selector","includes","matchOpenBrace","matchAllDeclarations","matchCloseBrace","cssValue","all","$1","getLinkFileDir","keyframesRule","mediaRule","customMediaRule","supportsRule","importRule","charsetRule","namespaceRule","documentRule","pageRule","hostRule","fontFaceRule","keyframeRule","r","valList","commonHandlerForAtRuleWithSelfRule","reg","RegExp","matchComment","commentText","slice","rule","matchArray","matchStr","strFragment","encodeURIComponent","commonAction","styleElement","__MICRO_APP_HAS_SCOPED__","parser","textContent","scopedCSS","scopecss","__MICRO_APP_LINK_PATH__","observer","MutationObserver","disconnect","hasAttribute","observe","childList","eventHandler","event","currentTarget","get","srcElement","dispatchOnLoadEvent","CustomEvent","onload","dispatchEvent","dispatchOnErrorEvent","globalLinks","Map","extractLinkFromHtml","link","parent","isDynamic","rel","getAttribute","href","replaceComment","info","isGlobal","createComment","source","links","set","placeholder","removeChild","setAttribute","replaceChild","fetchLinksFromHtml","wrapElement","microAppHead","linkEntries","entries","map","has","styleLink","parentNode","fetchLinkSuccess","onLoad","dynamicElementInMicroAppMap","WeakMap","handleNewNode","child","HTMLStyleElement","HTMLLinkElement","checkExcludeUrl","linkReplaceComment","checkIgnoreUrl","excludeAssetFilter","replaceStyle","originLink","formatDynamicLink","HTMLScriptElement","src","extractScriptElement","isExternal","replaceElement","originScript","dispatchScriptOnLoadEvent","scripts","existInfo","module","runScript","globalScripts","inline","bindScope","runCode2InlineScript","runCode2Function","runDynamicRemoteScript","invokePrototypeMethod","rawMethod","targetChild","passiveChild","container","head","querySelector","body","getContainer","contains","globalEnv","rawAppendChild","rawRemoveChild","invokeRawMethod","method","rawAppend","rawPrepend","getMappingNode","commonElementHandler","newChild","appInstanceMap","Node","patchElementPrototypeMethods","rawDocument","rawQuerySelector","querySelectorAll","rawQuerySelectorAll","Document","markElement","rawCreateElement","createElementNS","namespaceURI","rawCreateElementNS","rawCreateDocumentFragment","getElementById","rawGetElementById","getElementsByClassName","rawGetElementsByClassName","getElementsByTagName","rawGetElementsByTagName","getElementsByName","rawGetElementsByName","patchDocument","Element","insertBefore","refChild","rawInsertBefore","oldChild","rawReplaceChild","append","nodes","prepend","rawCloneNode","hasRewriteSetAttribute","releasePatches","hasRejectMicroAppStyle","AppManager","getAll","values","clear","unmountNestedApp","releaseUnmountOfNestedApp","disconnectedCallback","__MICRO_APP_UMD_MODE__","__MICRO_APP_ENVIRONMENT__","removeEventListener","initGlobalEnv","rawSetAttribute","ImageProxy","Proxy","Image","construct","Target","elementImage","rawWindow","supportModuleScript","rawWindowAddEventListener","addEventListener","rawWindowRemoveEventListener","rawSetInterval","setInterval","rawSetTimeout","rawClearInterval","clearInterval","rawClearTimeout","clearTimeout","rawDocumentAddEventListener","rawDocumentRemoveEventListener","__MICRO_APP_BASE_APPLICATION__","assign","style","rejectMicroAppStyle","script","type","noModule","async","nonceStr","random","substr","getAssetsPlugins","some","excludeChecker","ignoreChecker","fetchScriptsFromHtml","scriptEntries","fetchScriptPromise","fetchScriptPromiseInfo","globalScriptText","isPrefetch","fetchScriptSuccess","callback","scriptElement","blob","Blob","createObjectURL","moduleCount","code2Function","newCode","processCode","usePlugins","sandBox","__MICRO_APP_PROXY_WINDOW__","proxyWindow","configs","config","loader","flatChildren","children","dom","HTMLMetaElement","HTMLTitleElement","HTMLImageElement","extractSourceDom","wrapDiv","getWrapElement","microAppBody","size","eventCenter","isLegalName","on","f","autoTrigger","eventInfo","eventList","getOwnPropertyNames","callbacks","Set","add","off","delete","dispatch","getData","formatEventName","fromBaseApp","EventCenterForGlobal","addGlobalDataListener","cb","__APP_NAME__","__AUTO_TRIGGER__","removeGlobalDataListener","setGlobalData","getGlobalData","clearGlobalDataListener","EventCenterForBaseApp","addDataListener","removeDataListener","setData","clearDataListener","EventCenterForMicroApp","super","detail","bindFunctionToRawWindow","value","__MICRO_APP_BOUND_WINDOW_FUNCTION__","__MICRO_APP_IS_CONSTRUCTOR__","valueStr","isConstructor","__MICRO_APP_IS_BOUND_FUNCTION__","isBoundedFunction","bindRawWindowValue","configurable","enumerable","writable","documentClickListMap","hasRewriteDocumentOnClick","documentEventListenerMap","effectDocumentEvent","getOwnPropertyDescriptor","rawOnClick","onclick","hasDocumentClickInited","onClickHandler","overwriteDocumentOnClick","listener","umdMode","appListenersMap","appListenerList","__MICRO_APP_MARK_OPTIONS__","formatEventList","formatEventType","microAppWindow","staticEscapeProperties","escapeSetterKeyList","globalPropertyList","SandBox","getSpecialProperties","createProxyWindow","initMicroAppWindow","eventListenerMap","intervalIdMap","timeoutIdMap","listenerList","handler","timeout","intervalId","timeoutId","umdWindowListenerMap","umdDocumentListenerMap","umdOnClickHandler","umdIntervalIdMap","umdTimeoutIdMap","recordUmdEffect","documentAppListenersMap","rebuildUmdEffect","releaseEffect","effect","start","baseRoute","active","__MICRO_APP_BASE_ROUTE__","__MICRO_APP_BASE_URL__","_babelPolyfill","activeCount","stop","injectedKeys","Reflect","deleteProperty","escapeKeys","recordUmdSnapshot","microAppEventCenter","umdDataListeners","normal","globalEventInfo","subAppEventInfo","recordDataCenterSnapshot","recordUmdInjectedValues","rebuildUmdSnapshot","rebuildDataCenterSnapshot","commonActionForSpecialProperties","scopeProperties","concat","escapeProperties","descriptorTargetMap","rawValue","descriptor","ownKeys","filter","item","create","__MICRO_APP_PUBLIC_PATH__","__MICRO_APP_WINDOW__","setMappingPropertiesWithRawDescriptor","setHijackProperties","topValue","parentValue","top","createDescriptorForMicroAppWindow","modifiedEval","modifiedImage","eval","dispatchLifecyclesEvent","lifecycleName","formatEventInfo","dispatchCustomEventToMicroApp","eventName","CreateApp","useSandbox","baseroute","NOT_LOADED","loadSourceCode","state","LOADING_SOURCE_CODE","html","loadSourceLevel","prefetchResolve","UNMOUNT","LOAD_SOURCE_FINISHED","mount","LOAD_SOURCE_ERROR","umdHookMountResult","BEFOREMOUNT","MOUNTING","umdHookMount","handleMounted","hasDispatchMountedEvent","scriptList","initHook","scriptListEntries","deferScriptPromise","deferScriptInfo","errorCount","undefined","execScripts","unmount","getUmdLibraryHooks","umdHookUnmount","dispatchMountedEvent","MOUNTED","destroy","unmountcb","umdHookUnmountResult","keepAliveState","keepAliveContainer","handleUnmounted","actionsForUnmount","actionsForCompletelyDestroy","childElementCount","getActiveApps","libraryName","hiddenKeepAliveApp","oldContainer","KEEP_ALIVE_HIDDEN","appState","AFTERHIDDEN","showKeepAliveApp","BEFORESHOW","KEEP_ALIVE_SHOW","AFTERSHOW","ERROR","getAppState","getKeepAliveState","defineElement","MicroAppElement","HTMLElement","isWaiting","formatAttrName","formatAttrUrl","legalAttribute","existApp","appUrl","handleUnmount","actionsForAttributeChange","getKeepAliveModeResult","handleHiddenKeepAliveApp","getDestroyCompatibleResult","cloneValue","propertyKey","observedAttributes","connectedCallback","hasConnected","CREATED","initialMount","attributeChangedCallback","attr","_oldVal","newVal","NAME","handleAttributeUpdate","formatNewName","cacheData","handleInitialNameAndUrl","getDisposeResult","shadowRoot","attachShadow","mode","existAppUrl","activeAppUrl","handleShowKeepAliveApp","handleCreateApp","handleAppMount","val","getBaseRouteCompatible","compatibleSpecialProperties","compatibleDisableSpecialProperties","customElements","define","preFetch","apps","pre","next","preFetchInSerial","prefetchApp","onLine","disableScopecss","disableSandbox","fetchGlobalResources","resources","suffix","effectiveResource","excludeHiddenApp","activeApps","unmountApp","clearAliveState","unmountHandler","afterhiddenHandler","destroyAttrValue","destoryAttrValue","removeAttribute","keepAliveAttrValue","MicroApp","shadowDOM","destory","ssr","preFetchApps","globalAssets","assets","js","css","formattedAppName","keys"],"mappings":"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"}